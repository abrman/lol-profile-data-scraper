{"version":3,"sources":["tools/interfaceManager.tsx","tools/mediaStreamManager.tsx","tools/Capture.tsx","tools/views/skins.tsx","tools/views/loot.tsx","tools/views/champions.tsx","tools/views/emotes.tsx","tools/views/icons.tsx","tools/Data.tsx","tools/scraper.tsx","views/WelcomeView/assets/Logo.tsx","views/WelcomeView/assets/WelcomeIcons.tsx","views/WelcomeView/WelcomeView.tsx","views/PrepareView/assets/PrepareIcons.tsx","components/SmallLogo.tsx","views/PrepareView/PrepareView.tsx","views/ScrapeView/assets/Loader.tsx","views/ScrapeView/ScrapeView.tsx","views/WorkView/WorkView.tsx","views/DataView/DataView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["interfaceManager","initiated","pixelCanvas","document","createElement","getContext","edgeSearch","searchCoordinates","videoElement","React","createRef","currentUi","storePixel","x","y","lastCurrentInterfaceComputeTime","collectionLabels","interfaceData","1920","storePixelOffset","menuItemGaps","profileIconOffset","collection","1600","1280","1024","init","this","canvas","height","width","findStorePixel","generateSearchCoordinates","getPixelDataFromVideo","current","console","error","drawImage","pixelData","Array","from","getImageData","data","currentInterface","Date","getTime","Object","keys","indexOf","active_menu_items","filter","expectedColor","r","g","b","Math","abs","videoWidth","i","greenChannel","_","length","profilePixelData","main_menu","v","map","menu_item","mediaDevices","navigator","mediaStreamManager","captureStream","startCapture","onSuccess","a","getDisplayMedia","video","cursor","audio","then","stream","onStreamBegin","stopCapture","scraper","srcObject","getTracks","forEach","track","stop","onloadedmetadata","e","play","videoHeight","toString","alert","window","location","reload","Capture","options","checkFunction","rawCanvasList","canvasList","workCanvas","scrollBarCanvas","complete","clientWidth","clientHeight","screenshotArea","matchingArea","scrollBar","loadCheck","currentProgress","loaded","w","h","loop","prevCanvas","push","isLoaded","scrollBarInfo","atTop","firstFreeRowIndex","attemptScreenshot","setTimeout","toFixed","addCanvas","ssArea","atBottom","freeRowIndex","add","searchData","matchingData","search","match","min","offsetTop","size","bottomRowY","yBottomCheck","lastRowRedChannel","max","cropAlphaFromCanvases","rawCanvas","rects","minMaxArr","fill","Infinity","rect","offsetRectsTop","cropTop","cropBottom","prevMaxY","currMinY","floor","currMaxY","nextMinY","imageData","putImageData","rawCanvasImageData","canvasHeight","screenshotData","sb","y1","y2","redChannel","join","replace","slice","diff","hue","round","check","foundColor","j","color","Skins","currentViewFunction","lookupTable","skinsCollectionModel","classifiedRects","warnMessage","prepareClassificationAssets","Promise","all","fetch","res","json","tf","lookupTableLoot","lookupTableSkins","l","prediction","getPredictionFromRect","type","count","name","model","labels","lightValues","pixels","lightness","tensor","predictions","predict","dataSync","bestPrediction","sort","computeRects","classifyRects","ctx","beginPath","globalAlpha","fillStyle","fillRect","lineWidth","strokeStyle","stroke","font","fillText","cropCanvasesByRects","offset","xStart","yStart","iconWidth","iconHeight","iconOffsetX","iconOffsetY","lineHeight","canvasIndex","cat","checkIsViewingUnowned","Loot","models","champions","skins","wards","numbers","shard_permanent","token","masteryTokenFromRect","lootCountFromRect","log","rgb2hue","xPad","yPad","minNumberHeight","maxNumberHeight","picture","ceil","splice","shift","pop","rowAboveLineDark","foundNumbers","freeColumns","reduce","numberColumnsRanges","start","reverse","range","number","parseInt","categories","lines","centerColumn","items","currLine","currCategory","item","squareImage","root","c","Champions","championCollectionModel","isViewingUnowned","annotatedCtx","id","owned","mastery","chestAvailable","lookupTableChampions","ownership","checkOwnershipFromRect","checkMasteryFromRect","checkChestAvailable","circleHue","getPixelColor","flagHue","circle1Hue","circle2Hue","image","n","Emotes","Icons","checkIsViewingMyCollection","Data","loot_lookup_table","blueEssenceSpent","championsTable","calcBlueEssenceSpent","flatMap","storeBE","RP2data","BE","upgrade","disenchantS","disenchantP","champList","champ","chestAvail","shards","perms","token6","token7","eternalShards","storeRP","ugradeBE","index","columns","Header","accessor","Cell","row","original","src","alt","title","className","value","loot","emotes","icons","recognize","callback","download","zip","JSZip","viewName","view","annotateImages","file","toDataURL","split","base64","generateAsync","content","saveAs","getCurrView","startScraping","Logo","justTitle","subtitle1","subtitle2","WelcomeIcons","scroll","viewBox","xmlns","d","strokeWidth","strokeLinecap","rx","transform","share","strokeLinejoin","WelcomeView","props","hide","onClick","setView","PrepareIcons","clearPopups","cx","cy","resizeClient","SmallLogo","animateIn","PrepareView","Loader","active","style","warning","ScrapeView","getLoadedStates","output","progress","isActive","useState","loadStates","setLoadStates","requestRef","useRef","updateLoadedStateLoop","requestAnimationFrame","useEffect","cancelAnimationFrame","values","p","marginTop","WorkView","DataView","tableData","useMemo","Table","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","margin","textAlign","background","border","padding","fontSize","borderRadius","href","App","isHiding","setIsHiding","currView","setCurrView","display","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0046cb4c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype Point = { x: number; y: number };\r\n\r\ntype InterfaceData = {\r\n  [x: string]: {\r\n    edgeSearch: Point;\r\n    storePixelOffset: Point;\r\n    menuItemGaps: number;\r\n    profileIconOffset: Point;\r\n    collection: { x: number[]; y: number };\r\n  };\r\n};\r\n\r\ntype searchPoint = [string, number, number, [number, number, number]];\r\n\r\ninterface InterfaceManager {\r\n  initiated: boolean;\r\n  pixelCanvas: CanvasRenderingContext2D;\r\n  edgeSearch: CanvasRenderingContext2D;\r\n  searchCoordinates: { [interfaceName: string]: searchPoint[] } | false;\r\n  videoElement: React.RefObject<HTMLVideoElement>;\r\n  currentUi: string;\r\n  collectionLabels: string[];\r\n  interfaceData: InterfaceData;\r\n  init(videoElement: React.RefObject<HTMLVideoElement>): void;\r\n  storePixel: Point | false;\r\n  findStorePixel: () => Point | false;\r\n  generateSearchCoordinates: () =>\r\n    | { [interfaceName: string]: searchPoint[] }\r\n    | false;\r\n  getPixelDataFromVideo: (\r\n    x: number,\r\n    y: number\r\n  ) => [number, number, number] | false;\r\n  currentInterface(\r\n    videoElement: React.RefObject<HTMLVideoElement>\r\n  ): string | false;\r\n  lastCurrentInterfaceComputeTime: number;\r\n  // [x: string]: any;\r\n}\r\n\r\nexport const interfaceManager: InterfaceManager = {\r\n  initiated: false,\r\n  pixelCanvas: document.createElement(\"canvas\").getContext(\"2d\")!,\r\n  edgeSearch: document.createElement(\"canvas\").getContext(\"2d\")!,\r\n  searchCoordinates: false,\r\n  videoElement: React.createRef<HTMLVideoElement>(),\r\n  currentUi: \"main_menu\",\r\n  storePixel: { x: -1, y: -1 },\r\n  lastCurrentInterfaceComputeTime: 0,\r\n\r\n  collectionLabels: [\r\n    \"champions\",\r\n    \"skins\",\r\n    \"emotes\",\r\n    \"runes\",\r\n    \"spells\",\r\n    \"items\",\r\n    \"icons\",\r\n    \"wards\",\r\n    \"chromas\",\r\n  ],\r\n  interfaceData: {\r\n    1920: {\r\n      edgeSearch: { x: 1393, y: 32 },\r\n      storePixelOffset: { x: -55, y: -30 },\r\n      menuItemGaps: 81,\r\n      profileIconOffset: { x: -315, y: 60 },\r\n      collection: {\r\n        y: 164,\r\n        x: [134, 266, 376, 494, 611, 708, 823, 930, 1061],\r\n      },\r\n    },\r\n    1600: {\r\n      edgeSearch: { x: 1161, y: 25 },\r\n      storePixelOffset: { x: -46, y: -24 },\r\n      menuItemGaps: 68,\r\n      profileIconOffset: { x: -260, y: 50 },\r\n      collection: {\r\n        y: 137,\r\n        x: [112, 221, 314, 412, 509, 590, 685, 775, 884],\r\n      },\r\n    },\r\n    1280: {\r\n      edgeSearch: { x: 929, y: 21 },\r\n      storePixelOffset: { x: -37, y: -20 },\r\n      menuItemGaps: 54,\r\n      profileIconOffset: { x: -210, y: 40 },\r\n      collection: {\r\n        y: 109,\r\n        x: [89, 177, 251, 329, 407, 472, 548, 620, 707],\r\n      },\r\n    },\r\n    1024: {\r\n      edgeSearch: { x: 743, y: 16 },\r\n      storePixelOffset: { x: -29, y: -15 },\r\n      menuItemGaps: 43,\r\n      profileIconOffset: { x: -168, y: 30 },\r\n      collection: {\r\n        y: 87,\r\n        x: [71, 142, 201, 263, 326, 377, 438, 496, 565],\r\n      },\r\n    },\r\n  },\r\n\r\n  init(videoElement: React.RefObject<HTMLVideoElement>) {\r\n    if (this.initiated) return;\r\n    this.videoElement = videoElement;\r\n    this.pixelCanvas.canvas.height = 1;\r\n    this.pixelCanvas.canvas.width = 1;\r\n    this.edgeSearch.canvas.width = 200;\r\n    this.edgeSearch.canvas.height = 1;\r\n    this.storePixel = this.findStorePixel();\r\n    this.searchCoordinates = this.generateSearchCoordinates();\r\n    if (!this.storePixel || !this.searchCoordinates) return;\r\n    this.initiated = true;\r\n  },\r\n\r\n  getPixelDataFromVideo(x: number, y: number) {\r\n    if (this.videoElement.current == null) {\r\n      console.error(\"couldn't find videoElement on getPixelDataFromVideo()\");\r\n      return false;\r\n    }\r\n    this.pixelCanvas.drawImage(\r\n      this.videoElement.current,\r\n      x,\r\n      y,\r\n      1,\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      1\r\n    );\r\n    const pixelData = Array.from(\r\n      this.pixelCanvas.getImageData(0, 0, 1, 1).data\r\n    );\r\n    return [pixelData[0], pixelData[1], pixelData[2]];\r\n  },\r\n\r\n  currentInterface(videoElement: React.RefObject<HTMLVideoElement>) {\r\n    this.init(videoElement);\r\n    if (\r\n      !this.initiated ||\r\n      new Date().getTime() - 1000 / 144 < this.lastCurrentInterfaceComputeTime\r\n    )\r\n      return this.currentUi;\r\n    if (this.searchCoordinates === false) {\r\n      console.error(\"couldn't find searchCoordinates on currentInterface()\");\r\n      return false;\r\n    }\r\n\r\n    this.currentUi = \"main_menu\";\r\n    while (Object.keys(this.searchCoordinates).indexOf(this.currentUi) >= 0) {\r\n      //   console.log(this.searchCoordinates, this.currentUi);\r\n\r\n      const active_menu_items = this.searchCoordinates[this.currentUi].filter(\r\n        ([name, x, y, expectedColor]: [string, number, number, number[]]) => {\r\n          const pixelData = this.getPixelDataFromVideo(x, y);\r\n          if (!pixelData) return false;\r\n          const [r, g, b] = pixelData;\r\n          return (\r\n            Math.abs(r - expectedColor[0]) +\r\n              Math.abs(g - expectedColor[1]) +\r\n              Math.abs(b - expectedColor[2]) <\r\n            100\r\n          );\r\n        }\r\n      );\r\n      //   if (active_menu_items.length > 1)\r\n      //     console.error(`More than one active menu item`, active_menu_items);\r\n      if (active_menu_items[0]) this.currentUi = active_menu_items[0][0];\r\n      else this.currentUi = \"unknown\";\r\n    }\r\n    this.lastCurrentInterfaceComputeTime = new Date().getTime();\r\n    return this.currentUi;\r\n  },\r\n\r\n  findStorePixel() {\r\n    if (this.videoElement.current == null) return false;\r\n    this.edgeSearch.drawImage(\r\n      this.videoElement.current,\r\n      this.interfaceData[this.videoElement.current.videoWidth].edgeSearch.x -\r\n        100,\r\n      this.interfaceData[this.videoElement.current.videoWidth].edgeSearch.y,\r\n      200,\r\n      1,\r\n      0,\r\n      0,\r\n      200,\r\n      1\r\n    );\r\n    const greenChannel = this.edgeSearch\r\n      .getImageData(0, 0, 200, 1)\r\n      .data.filter((_: number, i: number) => i % 4 === 1);\r\n    let i;\r\n    for (i = 1; i < greenChannel.length; i++)\r\n      if (\r\n        greenChannel[i] > greenChannel[0] + 30 &&\r\n        greenChannel[i] - 20 > greenChannel[i - 1] &&\r\n        greenChannel[i] - 20 > greenChannel[i + 1]\r\n      ) {\r\n        break;\r\n      }\r\n\r\n    return {\r\n      x:\r\n        this.interfaceData[this.videoElement.current.videoWidth].edgeSearch.x -\r\n        100 +\r\n        i +\r\n        this.interfaceData[this.videoElement.current.videoWidth]\r\n          .storePixelOffset.x,\r\n      y:\r\n        this.interfaceData[this.videoElement.current.videoWidth].edgeSearch.y +\r\n        this.interfaceData[this.videoElement.current.videoWidth]\r\n          .storePixelOffset.y,\r\n    };\r\n  },\r\n\r\n  generateSearchCoordinates() {\r\n    if (!this.storePixel || !this.videoElement.current) {\r\n      return false;\r\n    }\r\n\r\n    const profilePixelData = this.getPixelDataFromVideo(\r\n      this.storePixel.x +\r\n        this.interfaceData[this.videoElement.current.videoWidth]\r\n          .profileIconOffset.x,\r\n      this.storePixel.y +\r\n        this.interfaceData[this.videoElement.current.videoWidth]\r\n          .profileIconOffset.y\r\n    );\r\n\r\n    if (!profilePixelData) return false;\r\n    const yourStoreOpen = profilePixelData[0] > 180;\r\n\r\n    /* Doing some fake checks here (as Point or as HTMLVideoElement)\r\n    as there isn't anything between the check earlier in the function\r\n    and the return value that could change the fact of that check. */\r\n    return {\r\n      main_menu: [\r\n        \"store\",\r\n        yourStoreOpen ? \"shop\" : \"false\",\r\n        \"loot\",\r\n        \"collection\",\r\n        \"profile\",\r\n      ]\r\n        .filter((v) => v !== \"false\")\r\n        .map((menu_item, i) => [\r\n          menu_item,\r\n          (this.storePixel as Point).x -\r\n            this.interfaceData[\r\n              (this.videoElement.current as HTMLVideoElement).videoWidth\r\n            ].menuItemGaps *\r\n              i,\r\n          (this.storePixel as Point).y,\r\n          [1, 10, 19],\r\n        ]),\r\n      collection: this.interfaceData[\r\n        this.videoElement.current.videoWidth\r\n      ].collection.x.map((x: number, i: number) => [\r\n        this.collectionLabels[i],\r\n        x,\r\n        this.interfaceData[\r\n          (this.videoElement.current as HTMLVideoElement).videoWidth\r\n        ].collection.y,\r\n        [185, 185, 165],\r\n      ]),\r\n    };\r\n  },\r\n};\r\n","import scraper from \"./scraper\";\r\n\r\ninterface MediaStreamManager {\r\n  captureStream: any;\r\n  [x: string]: any;\r\n}\r\n\r\nconst mediaDevices = navigator.mediaDevices as any; // workaround: https://github.com/microsoft/TypeScript/issues/33232\r\n\r\nexport const mediaStreamManager: MediaStreamManager = {\r\n  captureStream: null,\r\n\r\n  startCapture(onSuccess: () => void) {\r\n    (async () => {\r\n      try {\r\n        this.captureStream = await mediaDevices.getDisplayMedia({\r\n          video: { cursor: \"never\" },\r\n          audio: false,\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Error: \" + err);\r\n      }\r\n      return this.captureStream;\r\n    })().then((stream) => {\r\n      this.captureStream = stream;\r\n      this.onStreamBegin(stream, onSuccess);\r\n    });\r\n  },\r\n\r\n  stopCapture() {\r\n    let tracks = (\r\n      scraper.videoElement.current.srcObject as MediaStream\r\n    ).getTracks();\r\n\r\n    tracks.forEach((track) => track.stop());\r\n    scraper.videoElement.current.srcObject = null;\r\n  },\r\n\r\n  onStreamBegin(stream: MediaStream, onSuccess: () => void) {\r\n    if (scraper.videoElement == null || scraper.videoElement.current == null) {\r\n      return;\r\n    }\r\n\r\n    scraper.videoElement.current.srcObject = stream;\r\n    scraper.videoElement.current.onloadedmetadata = function (e) {\r\n      if (scraper.videoElement.current == null) {\r\n        return;\r\n      }\r\n      scraper.videoElement.current.play().then(() => {\r\n        scraper.videoWidth = scraper.videoElement.current.videoWidth;\r\n        scraper.videoHeight = scraper.videoElement.current.videoHeight;\r\n\r\n        if (\r\n          [\"19201080\", \"1600900\", \"1024576\", \"1280720\"].indexOf(\r\n            scraper.videoWidth.toString() + scraper.videoHeight.toString()\r\n          ) < 0\r\n        ) {\r\n          alert(\r\n            \"Please share only the League of Legends window. Site will reload now\"\r\n          );\r\n          window.location.reload();\r\n        }\r\n        onSuccess();\r\n      });\r\n    };\r\n  },\r\n};\r\n","type ScreenshotArea = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  add: number;\r\n  yBottomCheck?: number;\r\n};\r\n\r\ntype ScreenshotAreas = {\r\n  1920: ScreenshotArea;\r\n  1600: ScreenshotArea;\r\n  1280: ScreenshotArea;\r\n  1024: ScreenshotArea;\r\n} | null;\r\n\r\ntype MatchingArea = {\r\n  w: number;\r\n  h: number;\r\n};\r\n\r\ntype MatchingAreas = {\r\n  1920: MatchingArea;\r\n  1600: MatchingArea;\r\n  1280: MatchingArea;\r\n  1024: MatchingArea;\r\n} | null;\r\n\r\ntype ScrollBar = {\r\n  x: number;\r\n  y1: number;\r\n  y2: number;\r\n};\r\n\r\ntype ScrollBars = {\r\n  1920: ScrollBar;\r\n  1600: ScrollBar;\r\n  1280: ScrollBar;\r\n  1024: ScrollBar;\r\n} | null;\r\n\r\ntype LoadCheck = {\r\n  x: number;\r\n  y: number;\r\n  color: [r: number, g: number, b: number];\r\n}[];\r\n\r\ntype LoadChecks = {\r\n  1920: LoadCheck;\r\n  1600: LoadCheck;\r\n  1280: LoadCheck;\r\n  1024: LoadCheck;\r\n} | null;\r\n\r\ntype Options = {\r\n  screenshotArea: ScreenshotAreas;\r\n  matchingArea: MatchingAreas;\r\n  scrollBar: ScrollBars;\r\n  loadCheck: LoadChecks;\r\n};\r\n\r\nexport default class Capture {\r\n  rawCanvasList: HTMLCanvasElement[] = [document.createElement(\"canvas\")];\r\n  canvasList: HTMLCanvasElement[] = [document.createElement(\"canvas\")];\r\n  workCanvas = document.createElement(\"canvas\");\r\n  scrollBarCanvas = document.createElement(\"canvas\");\r\n\r\n  complete: Boolean = false;\r\n  clientWidth: 1920 | 1600 | 1280 | 1024;\r\n  clientHeight: 1080 | 900 | 720 | 576;\r\n\r\n  screenshotArea: ScreenshotAreas;\r\n  matchingArea: MatchingAreas;\r\n  scrollBar: ScrollBars;\r\n  loadCheck: LoadChecks;\r\n  videoElement: React.RefObject<HTMLVideoElement>;\r\n  checkFunction: () => Boolean;\r\n  currentProgress: number = 0;\r\n  loaded: boolean = false;\r\n\r\n  constructor(\r\n    videoElement: React.RefObject<HTMLVideoElement>,\r\n    options: Options,\r\n    checkFunction: () => Boolean\r\n  ) {\r\n    this.screenshotArea = options.screenshotArea;\r\n    this.matchingArea = options.matchingArea;\r\n    this.scrollBar = options.scrollBar;\r\n    this.loadCheck = options.loadCheck;\r\n    this.videoElement = videoElement;\r\n    this.clientWidth = videoElement.current.videoWidth as\r\n      | 1920\r\n      | 1600\r\n      | 1280\r\n      | 1024;\r\n    this.clientHeight = videoElement.current.videoHeight as\r\n      | 1080\r\n      | 900\r\n      | 720\r\n      | 576;\r\n    this.checkFunction = checkFunction;\r\n\r\n    this.scrollBarCanvas.width = 1;\r\n    this.scrollBarCanvas.height = 1080;\r\n\r\n    this.workCanvas.width = this.screenshotArea[this.clientWidth].w;\r\n    this.workCanvas.height = this.screenshotArea[this.clientWidth].h;\r\n\r\n    this.loop();\r\n  }\r\n\r\n  get canvas() {\r\n    return this.canvasList[this.canvasList.length - 1];\r\n  }\r\n\r\n  get rawCanvas() {\r\n    return this.rawCanvasList[this.rawCanvasList.length - 1];\r\n  }\r\n\r\n  addCanvas() {\r\n    const prevCanvas = this.canvas;\r\n\r\n    this.canvasList.push(document.createElement(\"canvas\"));\r\n    this.canvas.width = prevCanvas.width;\r\n    this.canvas.height = prevCanvas.height;\r\n    this.canvas\r\n      .getContext(\"2d\")\r\n      .drawImage(\r\n        prevCanvas,\r\n        0,\r\n        30000,\r\n        prevCanvas.width,\r\n        1000,\r\n        0,\r\n        0,\r\n        prevCanvas.width,\r\n        1000\r\n      );\r\n  }\r\n\r\n  loop() {\r\n    if (\r\n      !this.complete &&\r\n      this.checkFunction() &&\r\n      this.isLoaded() &&\r\n      (this.scrollBarInfo().atTop || this.firstFreeRowIndex() > 0)\r\n    ) {\r\n      this.attemptScreenshot();\r\n    }\r\n\r\n    setTimeout(() => this.loop(), 30);\r\n  }\r\n\r\n  progress() {\r\n    return (this.currentProgress * 100).toFixed(1) + \"%\";\r\n  }\r\n\r\n  firstFreeRowIndex(canvas?: HTMLCanvasElement) {\r\n    canvas = canvas || this.canvas;\r\n    const alphaChannel = Array.from(\r\n      canvas.getContext(\"2d\").getImageData(0, 0, 1, canvas.height).data\r\n    ).filter((_, i) => i % 4 === 3);\r\n    return alphaChannel.indexOf(0);\r\n  }\r\n\r\n  attemptScreenshot() {\r\n    if (this.firstFreeRowIndex() > 31000) this.addCanvas();\r\n\r\n    const ssArea = this.screenshotArea[this.clientWidth];\r\n    const scrollBarInfo = this.scrollBarInfo();\r\n    const atBottom = scrollBarInfo.atBottom;\r\n    const freeRowIndex = this.firstFreeRowIndex();\r\n\r\n    if (freeRowIndex === 0) {\r\n      this.canvas.width = this.screenshotArea[this.clientWidth].w;\r\n      this.canvas.height = 32000;\r\n\r\n      this.canvas\r\n        .getContext(\"2d\")\r\n        .drawImage(\r\n          this.videoElement.current,\r\n          ssArea.x,\r\n          ssArea.y - ssArea.add,\r\n          ssArea.w,\r\n          ssArea.h + ssArea.add,\r\n          0,\r\n          freeRowIndex,\r\n          ssArea.w,\r\n          ssArea.h + ssArea.add\r\n        );\r\n    } else {\r\n      this.workCanvas\r\n        .getContext(\"2d\")\r\n        .drawImage(\r\n          this.videoElement.current,\r\n          ssArea.x,\r\n          atBottom ? this.clientHeight - ssArea.h : ssArea.y,\r\n          ssArea.w,\r\n          ssArea.h,\r\n          0,\r\n          0,\r\n          ssArea.w,\r\n          ssArea.h\r\n        );\r\n\r\n      const h = this.matchingArea[this.clientWidth].h;\r\n      const w = this.matchingArea[this.clientWidth].w;\r\n\r\n      const searchData = this.workCanvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, 0, w, h).data;\r\n      const matchingData = this.canvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, freeRowIndex - ssArea.h, w, ssArea.h).data;\r\n\r\n      // Search algorithm visualization\r\n      // https://flems.io/#0=N4IgtglgJlA2CmIBcBWAnAOjQJgDQgDMIEBnZAbVADsBDMRJEDACwBcxYR8BjAeytbwByEAB4oEAG4ACbrBokSAXgA6IAO4AnGgAcd8TWoB8ogPQTJRriBLwE3VhH5lGABiTYA7CAC+uanQMTABWZDz8gsKMfFQkrNLq0krSAIwAbK4A3CpUMXHSzEnSABxZOXnx3IXJKdlU5c7xWrr6mkVQvNwArvQCGACOXQYAngDKdvAOvJoAFGoYzXoGagCUdYutGHHDCCzwEADmbEXMAFTYANQA5DoAHlfr2kuaW6w78AvQrNUJ59d3DxyOXIGFBAEFNNphjN1KdmCsALoYAjTACiNCqMwA+kojMActJZI1ZHZYO1Oj0hKwMNxNPAaIJUQheqwZlcLFc1gSSbBYDT5IoADIQOIYGgwNncUmc7kbAxipZUKAAYWYxCgMylvJWOR8OvqVAQ8XI3Fwt1wwwRRXIrlwttcCLqDVi8VgvF4OiKWKSRmk+IN3Iq0ggRVupyqF24FxmM1uF2GK1OsKqKwApDC4eH4bKnpsquq6VRyBAkdtdgAjDEAawOml4XSVRTUAGJXG21NzAxcLnVCRACNJNdIjMkU8BZEostI4xdpD5uf3B7dh8l1Ctx7dJ5lpMNu3OFwOZsMVwV1zvJ-uqITbKwACoQej11luj24aSufXzg0vnQzNbWPgwB0YgDBEStyzsaxbHsRxnBETwkFcXx-BAWh6BEGlFAAiIqTA3goGPf1CWYfYjlYJBUjbSRmF7aQJBIHR5GGCiCAQW5aOCLo4n7YYAFoYkiciSQEAxaJoWBDioXiIEEMASAoqURM0OovxyBZcwMP1uSfCSqHgCiUDuaQSF4CSoGkVs2xUoEqBpUktKvaRWN4BkKIQAhWFo9QvmYCjsDuWiSMONg-IC7lK24Gs6wbKAKLpKAVKgiYHCcWIRBSAAWJAUhSXwER8IA\r\n      // 640 = 160(width) * 4(channel count)\r\n      // 51200 = 160(width) * 80(height) * 4(channel count)\r\n\r\n      search: for (let i = ssArea.h - h; i >= -h; i--) {\r\n        for (let x = 0; x < w; x++) {\r\n          for (let y = 0; y < h; y++) {\r\n            // for (let c = 0; c < 3; c++) {\r\n            const c = 0;\r\n            const search =\r\n              searchData[x * 4 + c + (((x + y) * w * 4) % (w * h * 4))];\r\n            const match =\r\n              matchingData[\r\n                i * w * 4 + x * 4 + c + (((x + y) * w * 4) % (w * h * 4))\r\n              ];\r\n            if (Math.abs(search - match) < 55 || (search < 50 && match < 50)) {\r\n            } else {\r\n              continue search;\r\n            }\r\n            // }\r\n          }\r\n        }\r\n\r\n        this.canvas\r\n          .getContext(\"2d\")\r\n          .drawImage(\r\n            this.workCanvas,\r\n            0,\r\n            0,\r\n            ssArea.w,\r\n            atBottom ? this.clientHeight - ssArea.y : ssArea.h,\r\n            0,\r\n            freeRowIndex - ssArea.h + i,\r\n            ssArea.w,\r\n            atBottom ? this.clientHeight - ssArea.y : ssArea.h\r\n          );\r\n\r\n        this.currentProgress = Math.min(\r\n          scrollBarInfo.offsetTop +\r\n            scrollBarInfo.size * scrollBarInfo.offsetTop,\r\n          0.999\r\n        );\r\n\r\n        if (atBottom) {\r\n          let bottomRowY = ssArea.y + ssArea.h;\r\n          if (typeof ssArea.yBottomCheck !== \"undefined\") {\r\n            bottomRowY = ssArea.yBottomCheck;\r\n          }\r\n          this.workCanvas\r\n            .getContext(\"2d\")\r\n            .drawImage(\r\n              this.videoElement.current,\r\n              ssArea.x,\r\n              bottomRowY,\r\n              ssArea.w,\r\n              1,\r\n              0,\r\n              0,\r\n              ssArea.w,\r\n              1\r\n            );\r\n\r\n          const lastRowRedChannel = Array.from(\r\n            this.workCanvas.getContext(\"2d\").getImageData(0, 0, ssArea.w, 1)\r\n              .data\r\n          ).filter((_, i) => i % 4 === 0);\r\n\r\n          // Confirm it's the last row - important with large collections where scrollbar\r\n          // appears at the bottom even though there's a couple more pixels to render\r\n          if (Math.max(...lastRowRedChannel) < 30) {\r\n            this.currentProgress = 1;\r\n            this.cropAlphaFromCanvases();\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  recognize() {\r\n    if (!this.complete) this.cropAlphaFromCanvases();\r\n  }\r\n\r\n  annotateImages() {\r\n    for (let i = 0; i < this.canvasList.length; i++) {\r\n      if (i > 0) this.rawCanvasList.push(document.createElement(\"canvas\"));\r\n      this.rawCanvas.width = this.canvasList[i].width;\r\n      this.rawCanvas.height = this.canvasList[i].height;\r\n      this.rawCanvas.getContext(\"2d\").drawImage(this.canvasList[i], 0, 0);\r\n    }\r\n  }\r\n\r\n  cropCanvasesByRects(\r\n    rects: {\r\n      x: number;\r\n      y: number;\r\n      w: number;\r\n      h: number;\r\n      canvas: HTMLCanvasElement;\r\n      [x: string]: any;\r\n    }[]\r\n  ) {\r\n    const minMaxArr = Array(this.canvasList.length)\r\n      .fill(0)\r\n      .map((_) => [Infinity, 0]);\r\n    rects.forEach((rect) => {\r\n      const i = this.canvasList.indexOf(rect.canvas);\r\n      minMaxArr[i] = [\r\n        Math.min(minMaxArr[i][0], rect.y),\r\n        Math.max(minMaxArr[i][1], rect.y + rect.h),\r\n      ];\r\n    });\r\n\r\n    const offsetRectsTop = [0];\r\n\r\n    for (let i = 0; i < minMaxArr.length; i++) {\r\n      const canvas = this.canvasList[i];\r\n      let cropTop = 0;\r\n      let cropBottom = canvas.height;\r\n      if (i !== 0) {\r\n        // define crop top\r\n        const prevMaxY = minMaxArr[i - 1][1];\r\n        const currMinY = minMaxArr[i][0];\r\n        cropTop = Math.floor(currMinY + prevMaxY - 30000) / 2;\r\n        offsetRectsTop[i] = cropTop;\r\n      }\r\n      if (i !== this.canvasList.length - 1) {\r\n        // define crop bottom\r\n        const currMaxY = minMaxArr[i][1];\r\n        const nextMinY = minMaxArr[i + 1][0];\r\n        cropBottom = Math.floor(currMaxY + nextMinY + 30000) / 2;\r\n      }\r\n      const imageData = canvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, cropTop, canvas.width, cropBottom - cropTop);\r\n      canvas.height = cropBottom - cropTop;\r\n      canvas.getContext(\"2d\").putImageData(imageData, 0, 0);\r\n\r\n      const rawCanvas = this.rawCanvasList[i];\r\n      const rawCanvasImageData = rawCanvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, cropTop, rawCanvas.width, cropBottom - cropTop);\r\n      rawCanvas.height = cropBottom - cropTop;\r\n      rawCanvas.getContext(\"2d\").putImageData(rawCanvasImageData, 0, 0);\r\n    }\r\n\r\n    // rects.map((rect) => ({\r\n    //   ...rect,\r\n    //   y: rect.y - offsetRectsTop[this.canvasList.indexOf(rect.canvas)],\r\n    // }));\r\n\r\n    // return rects;\r\n  }\r\n\r\n  cropAlphaFromCanvases() {\r\n    this.canvasList.forEach((canvas) => {\r\n      const canvasHeight = Math.max(this.firstFreeRowIndex(canvas), 1);\r\n      const screenshotData = canvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, 0, canvas.width, canvasHeight);\r\n      canvas.height = canvasHeight;\r\n      canvas.getContext(\"2d\").putImageData(screenshotData, 0, 0);\r\n    });\r\n    this.complete = true;\r\n  }\r\n\r\n  scrollBarInfo() {\r\n    const sb = this.scrollBar[this.clientWidth];\r\n    this.scrollBarCanvas\r\n      .getContext(\"2d\")\r\n      .drawImage(\r\n        this.videoElement.current,\r\n        sb.x,\r\n        sb.y1,\r\n        1,\r\n        sb.y2 - sb.y1,\r\n        0,\r\n        0,\r\n        1,\r\n        sb.y2 - sb.y1\r\n      );\r\n    const redChannel = Array.from(\r\n      this.scrollBarCanvas.getContext(\"2d\").getImageData(0, 0, 1, sb.y2 - sb.y1)\r\n        .data\r\n    ).filter((_, i) => i % 4 === 0);\r\n    const scrollBar = redChannel\r\n      .map((v) => (v > 32 && v < 210 ? 1 : 0))\r\n      .join(\"\");\r\n    if (scrollBar.indexOf(\"1\") === -1) {\r\n      return {\r\n        size: 1,\r\n        offsetTop: 1,\r\n        atTop: 1,\r\n        atBottom: 1,\r\n      };\r\n    }\r\n    return {\r\n      size: scrollBar.replace(/0/g, \"\").length / redChannel.length,\r\n      // offsetTop: scrollBar.replace(/1+0+/g, \"\").length / redChannel.length,\r\n      offsetTop:\r\n        (scrollBar.replace(/1+0+/g, \"\").length +\r\n          redChannel.length -\r\n          scrollBar.replace(/0+1+/g, \"\").length) /\r\n        2 /\r\n        redChannel.length,\r\n      atTop:\r\n        scrollBar[0] === \"1\" && scrollBar.replace(/(.)\\1+/g, \"$1\") === \"10\",\r\n      atBottom: scrollBar.slice(-2).indexOf(\"1\") >= 0,\r\n    };\r\n  }\r\n\r\n  getPixelColor(x: number, y: number) {\r\n    const [r, g, b] = Array.from(\r\n      this.canvas.getContext(\"2d\").getImageData(x, y, 1, 1).data\r\n    );\r\n    return [r, g, b];\r\n  }\r\n\r\n  rgb2hue(\r\n    r: number | number[],\r\n    g?: number | undefined,\r\n    b?: number | undefined\r\n  ) {\r\n    if (typeof r == \"number\") {\r\n      const max = Math.max(r, g, b);\r\n      const diff = max - Math.min(r, g, b);\r\n      const hue =\r\n        max === r\r\n          ? 6 + (g - b) / diff\r\n          : max === g\r\n          ? 2 + (b - r) / diff\r\n          : 4 + (r - g) / diff;\r\n      return Math.round(hue * 60) % 360;\r\n    } else {\r\n      const max = Math.max(r[0], r[1], r[2]);\r\n      const diff = max - Math.min(r[0], r[1], r[2]);\r\n      const hue =\r\n        max === r[0]\r\n          ? 6 + (r[1] - r[2]) / diff\r\n          : max === r[1]\r\n          ? 2 + (r[2] - r[0]) / diff\r\n          : 4 + (r[0] - r[1]) / diff;\r\n      return Math.round(hue * 60) % 360;\r\n    }\r\n  }\r\n\r\n  isLoaded() {\r\n    for (let i = 0; i < this.loadCheck[this.clientWidth].length; i++) {\r\n      const check = this.loadCheck[this.clientWidth][i];\r\n      this.scrollBarCanvas\r\n        .getContext(\"2d\")\r\n        .drawImage(\r\n          this.videoElement.current,\r\n          check.x,\r\n          check.y,\r\n          1,\r\n          1,\r\n          0,\r\n          0,\r\n          1,\r\n          1\r\n        );\r\n      const foundColor = this.scrollBarCanvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, 0, 1, 1).data;\r\n      for (let j = 0; j < check.color.length; j++) {\r\n        if (Math.abs(check.color[j] - foundColor[j]) > 15) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import Capture from \"../Capture\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\ntype Color = [r: number, g: number, b: number];\r\ntype Rect = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  canvas: HTMLCanvasElement;\r\n  cat?: string;\r\n  type?: string;\r\n  count?: number;\r\n  name?: string;\r\n  data?: any;\r\n};\r\n\r\ntype LootLabels = [id: string, name: string, price: number, legacy: number][];\r\n\r\ntype LookupTable = [string, any][];\r\n\r\nexport default class Skins extends Capture {\r\n  constructor(\r\n    video: React.RefObject<HTMLVideoElement>,\r\n    currentViewFunction: () => string | false\r\n  ) {\r\n    const checkFunction = () => currentViewFunction() === \"skins\";\r\n    const options = {\r\n      screenshotArea: {\r\n        \"1920\": { x: 398, y: 218, w: 1156, h: 852, add: 5 },\r\n        \"1600\": { x: 332, y: 180, w: 962, h: 713, add: 5 },\r\n        \"1280\": { x: 264, y: 145, w: 770, h: 565, add: 5 },\r\n        \"1024\": { x: 210, y: 116, w: 618, h: 454, add: 5 },\r\n      },\r\n\r\n      matchingArea: {\r\n        \"1920\": { w: 300, h: 160 },\r\n        \"1600\": { w: 240, h: 140 },\r\n        \"1280\": { w: 200, h: 110 },\r\n        \"1024\": { w: 160, h: 80 },\r\n      },\r\n\r\n      scrollBar: {\r\n        \"1920\": { x: 1574, y1: 211, y2: 1073 },\r\n        \"1600\": { x: 1312, y1: 175, y2: 894 },\r\n        \"1280\": { x: 1049, y1: 140, y2: 715 },\r\n        \"1024\": { x: 840, y1: 112, y2: 572 },\r\n      },\r\n\r\n      loadCheck: {\r\n        \"1920\": [{ x: 223, y: 462, color: [254, 4, 10] as Color }],\r\n        \"1600\": [{ x: 186, y: 385, color: [254, 4, 9] as Color }],\r\n        \"1280\": [{ x: 149, y: 309, color: [248, 3, 13] as Color }],\r\n        \"1024\": [{ x: 120, y: 247, color: [253, 4, 9] as Color }],\r\n      },\r\n    };\r\n    super(video, options, checkFunction);\r\n\r\n    this.warnMessage = null;\r\n    this.prepareClassificationAssets();\r\n  }\r\n\r\n  lookupTable: LookupTable;\r\n  skinsCollectionModel: tf.LayersModel;\r\n  classifiedRects: Rect[];\r\n  warnMessage: string | null;\r\n\r\n  async prepareClassificationAssets() {\r\n    let [lookupTableLoot, lookupTableSkins, skinsCollectionModel] =\r\n      await Promise.all([\r\n        fetch(\"/lookup_data/loot.json\").then((res) => res.json()),\r\n        fetch(\"/lookup_data/collection_skins.json\").then((res) => res.json()),\r\n        tf.loadLayersModel(\"/models/coll_skins/model.json\"),\r\n      ]);\r\n\r\n    this.lookupTable = lookupTableSkins.map(\r\n      (v: [id: string, is_limited_edition: number]) => {\r\n        return [\r\n          (v[1] === 1 ? \"Limited edition \" : \"\") +\r\n            (lookupTableLoot[\"skins\"] as LootLabels).filter(\r\n              (l) => l[0] === v[0]\r\n            )[0][1],\r\n          v,\r\n        ];\r\n      }\r\n    );\r\n\r\n    this.skinsCollectionModel = skinsCollectionModel;\r\n    this.loaded = true;\r\n  }\r\n\r\n  classifyRects(rects: Rect[]) {\r\n    rects.forEach((rect: Rect, i: number) => {\r\n      const prediction = this.getPredictionFromRect(\r\n        rect,\r\n        this.skinsCollectionModel,\r\n        this.lookupTable\r\n      );\r\n      if (typeof prediction !== \"undefined\") {\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: \"collection_skin\",\r\n          count: 1,\r\n          name: prediction[0],\r\n          data: prediction[1],\r\n        };\r\n      }\r\n    });\r\n    return rects;\r\n  }\r\n\r\n  getPredictionFromRect(\r\n    rect: Rect,\r\n    model: tf.LayersModel,\r\n    labels: LookupTable\r\n  ): [string, any] {\r\n    if (!this.complete) return;\r\n\r\n    this.workCanvas.width = 28;\r\n    this.workCanvas.height = 28;\r\n\r\n    const lightValues = [];\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(rect.canvas, rect.x, rect.y, rect.w, rect.h, 0, 0, 28, 28);\r\n    let imageData = this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.getImageData(0, 0, 28, 28);\r\n    let pixels = imageData?.data;\r\n    if (typeof pixels !== \"undefined\") {\r\n      for (var j = 0; j < pixels.length; j += 4) {\r\n        let lightness =\r\n          pixels[j] * 0.299 + pixels[j + 1] * 0.587 + pixels[j + 2] * 0.114;\r\n        lightValues.push(lightness / 255);\r\n      }\r\n    }\r\n    const tensor = tf.tensor(lightValues, [1, 28, 28]);\r\n\r\n    const predictions = (model.predict(tensor) as tf.Tensor).dataSync();\r\n\r\n    const bestPrediction =\r\n      labels[predictions.indexOf(Math.max(...Array.from(predictions)))];\r\n\r\n    predictions.sort((a, b) => b - a);\r\n    if (predictions[0] - predictions[1] < 10) {\r\n      return [\"?\" + bestPrediction[0], bestPrediction[1]];\r\n    }\r\n    return bestPrediction;\r\n  }\r\n\r\n  recognize() {\r\n    super.recognize();\r\n    if (this.classifiedRects) return this.classifiedRects;\r\n\r\n    const rects = this.computeRects();\r\n    this.classifiedRects = this.classifyRects(rects);\r\n  }\r\n\r\n  annotateImages() {\r\n    super.annotateImages();\r\n    if (this.classifiedRects == null) return;\r\n\r\n    this.classifiedRects.forEach((rect: Rect, i: number) => {\r\n      const ctx = rect.canvas.getContext(\"2d\");\r\n      ctx.beginPath();\r\n\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fillStyle = \"#000\";\r\n      ctx.fillRect(rect.x, rect.y, rect.w, rect.h);\r\n      ctx.globalAlpha = 1;\r\n\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeStyle = (rect.name || \" \")[0] === \"?\" ? \"yellow\" : \"#fff\";\r\n      ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n      ctx.stroke();\r\n      if (typeof rect.name !== \"undefined\") {\r\n        ctx.font = \"10px Arial\";\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillText(\r\n          rect.name[0] === \"?\" ? rect.name.slice(1) : rect.name,\r\n          rect.x + 3,\r\n          rect.y + 15,\r\n          rect.w - 3\r\n        );\r\n      }\r\n    });\r\n\r\n    this.cropCanvasesByRects(this.classifiedRects);\r\n  }\r\n\r\n  computeRects() {\r\n    this.workCanvas.width = 15;\r\n    this.workCanvas.height = 15;\r\n\r\n    const offset = {\r\n      \"1920\": {\r\n        xStart: 26,\r\n        yStart: 88,\r\n        iconWidth: 174,\r\n        iconHeight: 249,\r\n        iconOffsetX: 231,\r\n        iconOffsetY: 336,\r\n        lineHeight: 81,\r\n      },\r\n      \"1600\": {\r\n        xStart: 22,\r\n        yStart: 76,\r\n        iconWidth: 146,\r\n        iconHeight: 208,\r\n        iconOffsetX: 192,\r\n        iconOffsetY: 280,\r\n        lineHeight: 68,\r\n      },\r\n      \"1280\": {\r\n        xStart: 19,\r\n        yStart: 61,\r\n        iconWidth: 116,\r\n        iconHeight: 166,\r\n        iconOffsetX: 154,\r\n        iconOffsetY: 224,\r\n        lineHeight: 54.6,\r\n      },\r\n      \"1024\": {\r\n        xStart: 17,\r\n        yStart: 50,\r\n        iconWidth: 91,\r\n        iconHeight: 130,\r\n        iconOffsetX: 123,\r\n        iconOffsetY: 179.2,\r\n        lineHeight: 43.3,\r\n      },\r\n    }[this.clientWidth];\r\n\r\n    let rects: Rect[] = [];\r\n    let x = offset.xStart;\r\n    let y = offset.yStart;\r\n    let canvasIndex = 0;\r\n\r\n    const drawCheckSquare = () =>\r\n      this.workCanvas\r\n        .getContext(\"2d\")\r\n        .drawImage(\r\n          this.canvasList[canvasIndex],\r\n          x - 15,\r\n          y - 15,\r\n          15,\r\n          15,\r\n          0,\r\n          0,\r\n          15,\r\n          15\r\n        );\r\n\r\n    const isIcon = () =>\r\n      Math.max(\r\n        ...Array.from(\r\n          this.workCanvas.getContext(\"2d\").getImageData(0, 0, 15, 15)\r\n            .data as Uint8ClampedArray\r\n        ).filter((v: number, i: number) => i % 4 === 0)\r\n      ) > 30;\r\n\r\n    while (\r\n      y + offset.iconHeight < this.canvasList[canvasIndex].height &&\r\n      canvasIndex < this.canvasList.length\r\n    ) {\r\n      if (y > 30000) {\r\n        y -= 30000;\r\n        canvasIndex++;\r\n      }\r\n      drawCheckSquare();\r\n      if (x < this.canvasList[canvasIndex].width && isIcon()) {\r\n        rects.push({\r\n          canvas: this.canvasList[canvasIndex],\r\n          cat: \"coll_skin\",\r\n          x,\r\n          y,\r\n          w: offset.iconWidth,\r\n          h: offset.iconHeight,\r\n        });\r\n        x += offset.iconOffsetX;\r\n      } else {\r\n        y += x === offset.xStart ? offset.lineHeight : offset.iconOffsetY;\r\n        x = offset.xStart;\r\n      }\r\n    }\r\n    return rects;\r\n  }\r\n\r\n  attemptScreenshot() {\r\n    if (this.checkIsViewingUnowned()) {\r\n      this.warnMessage = `Make sure \"Show Unowned\" option is disabled in the client.`;\r\n      return;\r\n    }\r\n    this.warnMessage = null;\r\n    super.attemptScreenshot();\r\n  }\r\n\r\n  checkIsViewingUnowned() {\r\n    const check = {\r\n      \"1024\": { x: 30, y: 294 + 102 },\r\n      \"1280\": { x: 37, y: 373 + 125 },\r\n      \"1600\": { x: 46, y: 465 + 156 },\r\n      \"1920\": { x: 55, y: 559 + 187 },\r\n    }[this.clientWidth];\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      .drawImage(this.videoElement.current, check.x, check.y, 1, 1, 0, 0, 1, 1);\r\n    const checkPixel = this.workCanvas\r\n      .getContext(\"2d\")\r\n      .getImageData(0, 0, 1, 1).data;\r\n\r\n    return checkPixel[0] > 50;\r\n  }\r\n}\r\n","import Capture from \"../Capture\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\ntype Color = [r: number, g: number, b: number];\r\ntype Rect = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  canvas: HTMLCanvasElement;\r\n  cat?: string;\r\n  type?: string;\r\n  count?: number;\r\n  name?: string;\r\n};\r\n\r\ntype Models = {\r\n  champions: tf.LayersModel;\r\n  skins: tf.LayersModel;\r\n  wards: tf.LayersModel;\r\n  numbers: tf.LayersModel;\r\n  shard_permanent: tf.LayersModel;\r\n};\r\n\r\ntype LookupLabels =\r\n  | [id: number, name: string, price: number, legacy: number][]\r\n  | string[];\r\n\r\ntype LookupTable = {\r\n  champions: LookupLabels;\r\n  skins: LookupLabels;\r\n  wards: LookupLabels;\r\n  [x: string]: any;\r\n};\r\n\r\nexport default class Loot extends Capture {\r\n  constructor(\r\n    video: React.RefObject<HTMLVideoElement>,\r\n    currentViewFunction: () => string | false\r\n  ) {\r\n    const checkFunction = () => currentViewFunction() === \"loot\";\r\n\r\n    const options = {\r\n      screenshotArea: {\r\n        \"1920\": { x: 80, y: 284, w: 500, h: 616, add: 60 },\r\n        \"1600\": { x: 70, y: 235, w: 410, h: 514, add: 50 },\r\n        \"1280\": { x: 55, y: 190, w: 330, h: 411, add: 40 },\r\n        \"1024\": { x: 45, y: 150, w: 265, h: 329, add: 30 },\r\n      },\r\n\r\n      matchingArea: {\r\n        \"1920\": { w: 160, h: 160 },\r\n        \"1600\": { w: 140, h: 140 },\r\n        \"1280\": { w: 110, h: 110 },\r\n        \"1024\": { w: 80, h: 80 },\r\n      },\r\n\r\n      scrollBar: {\r\n        \"1920\": { x: 596, y1: 232, y2: 926 },\r\n        \"1600\": { x: 497, y1: 193, y2: 770 },\r\n        \"1280\": { x: 397, y1: 154, y2: 617 },\r\n        \"1024\": { x: 319, y1: 123, y2: 494 },\r\n      },\r\n\r\n      loadCheck: {\r\n        \"1920\": [\r\n          { x: 260, y: 1015, color: [242, 145, 48] as Color },\r\n          { x: 350, y: 1005, color: [153, 38, 212] as Color },\r\n        ],\r\n        \"1600\": [\r\n          { x: 215, y: 845, color: [242, 145, 48] as Color },\r\n          { x: 290, y: 835, color: [153, 38, 212] as Color },\r\n        ],\r\n        \"1280\": [\r\n          { x: 172, y: 676, color: [242, 145, 48] as Color },\r\n          { x: 231, y: 670, color: [153, 38, 212] as Color },\r\n        ],\r\n        \"1024\": [\r\n          { x: 138, y: 540, color: [242, 145, 48] as Color },\r\n          { x: 185, y: 535, color: [153, 38, 212] as Color },\r\n        ],\r\n      },\r\n    };\r\n    super(video, options, checkFunction);\r\n\r\n    this.prepareClassificationAssets();\r\n  }\r\n\r\n  lookupTable: LookupTable;\r\n  models: Models;\r\n  classifiedRects: Rect[];\r\n\r\n  async prepareClassificationAssets() {\r\n    const [lookupTable, champions, skins, wards, numbers, shard_permanent] =\r\n      await Promise.all([\r\n        fetch(\"lookup_data/loot.json\").then((res) => res.json()),\r\n        tf.loadLayersModel(\"models/champions/model.json\"),\r\n        tf.loadLayersModel(\"models/skins/model.json\"),\r\n        tf.loadLayersModel(\"models/wards/model.json\"),\r\n        tf.loadLayersModel(\"models/numbers/model.json\"),\r\n        tf.loadLayersModel(\"models/shard_permanent/model.json\"),\r\n      ]);\r\n\r\n    this.lookupTable = lookupTable;\r\n\r\n    this.models = {\r\n      champions,\r\n      skins,\r\n      wards,\r\n      numbers,\r\n      shard_permanent,\r\n    };\r\n    this.loaded = true;\r\n  }\r\n\r\n  recognize() {\r\n    super.recognize();\r\n    if (this.classifiedRects) return this.classifiedRects;\r\n\r\n    const rects = this.computeRects();\r\n    this.classifiedRects = this.classifyRects(rects);\r\n    return this.classifiedRects;\r\n  }\r\n\r\n  annotateImages() {\r\n    super.annotateImages();\r\n    if (this.classifiedRects == null) return;\r\n\r\n    this.classifiedRects.forEach((rect: Rect, i: number) => {\r\n      const ctx = rect.canvas.getContext(\"2d\");\r\n      ctx.beginPath();\r\n\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fillStyle = \"#000\";\r\n      ctx.fillRect(rect.x, rect.y, rect.w, rect.h);\r\n      ctx.globalAlpha = 1;\r\n\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeStyle =\r\n        (rect.name || \"\").indexOf(\"(?)\") < 0 ? \"#fff\" : \"yellow\";\r\n      ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n      ctx.stroke();\r\n      if (\r\n        typeof rect.type !== \"undefined\" &&\r\n        typeof rect.count !== \"undefined\" &&\r\n        typeof rect.name !== \"undefined\"\r\n      ) {\r\n        ctx.font = \"10px Arial\";\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillText(\r\n          `${rect.count.toString()}x ${rect.name} ${rect.type}`,\r\n          rect.x + 3,\r\n          rect.y + 15,\r\n          rect.w - 3\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  classifyRects(rects: Rect[]) {\r\n    rects.forEach((rect: Rect, i: number) => {\r\n      if (rect.cat === \"materials\") {\r\n        const token = this.masteryTokenFromRect(rect);\r\n        if (token > 0) {\r\n          rects[i] = {\r\n            ...rects[i],\r\n            type: \"token\" + token.toString(),\r\n            count: this.lootCountFromRect(rect),\r\n            name: this.getPredictionFromRect(\r\n              rect,\r\n              this.models.champions,\r\n              this.lookupTable.champions\r\n            ),\r\n          };\r\n        }\r\n      } else if (rect.cat === \"champions\") {\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: this.getPredictionFromRect(rect, this.models.shard_permanent, [\r\n            \"shard\",\r\n            \"permanent\",\r\n          ]),\r\n          count: this.lootCountFromRect(rect),\r\n          name: this.getPredictionFromRect(\r\n            rect,\r\n            this.models.champions,\r\n            this.lookupTable.champions\r\n          ),\r\n        };\r\n      } else if (rect.cat === \"skins\") {\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: this.getPredictionFromRect(rect, this.models.shard_permanent, [\r\n            \"shard\",\r\n            \"permanent\",\r\n          ]),\r\n          count: this.lootCountFromRect(rect),\r\n          name: this.getPredictionFromRect(\r\n            rect,\r\n            this.models.skins,\r\n            this.lookupTable.skins\r\n          ),\r\n        };\r\n      } else if (rect.cat === \"ward_skins\") {\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: this.getPredictionFromRect(rect, this.models.shard_permanent, [\r\n            \"shard\",\r\n            \"permanent\",\r\n          ]),\r\n          count: this.lootCountFromRect(rect),\r\n          name: this.getPredictionFromRect(\r\n            rect,\r\n            this.models.wards,\r\n            this.lookupTable.wards\r\n          ),\r\n        };\r\n      } else if (rect.cat === \"eternals\") {\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: \"eternal\",\r\n          count: this.lootCountFromRect(rect),\r\n          name: this.getPredictionFromRect(\r\n            rect,\r\n            this.models.champions,\r\n            this.lookupTable.champions\r\n          ),\r\n        };\r\n      } else if ([\"little_legends\", \"emotes\", \"icons\"].indexOf(rect.cat) >= 0) {\r\n        console.log(\r\n          \"Skipping item from category as it is not yet supported.\",\r\n          rect.cat,\r\n          rect\r\n        );\r\n      }\r\n    });\r\n    return rects;\r\n  }\r\n\r\n  getPredictionFromRect(\r\n    rect: Rect,\r\n    model: tf.LayersModel,\r\n    labels: LookupLabels\r\n  ): string {\r\n    if (!this.complete) return;\r\n\r\n    this.workCanvas.width = 28;\r\n    this.workCanvas.height = 28;\r\n\r\n    const lightValues = [];\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(this.canvas, rect.x, rect.y, rect.w, rect.h, 0, 0, 28, 28);\r\n    let imageData = this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.getImageData(0, 0, 28, 28);\r\n    let pixels = imageData?.data;\r\n    if (typeof pixels !== \"undefined\") {\r\n      for (var j = 0; j < pixels.length; j += 4) {\r\n        let lightness =\r\n          pixels[j] * 0.299 + pixels[j + 1] * 0.587 + pixels[j + 2] * 0.114;\r\n        lightValues.push(lightness / 255);\r\n      }\r\n    }\r\n    const tensor = tf.tensor(lightValues, [1, 28, 28]);\r\n\r\n    const predictions = (model.predict(tensor) as tf.Tensor).dataSync();\r\n\r\n    const bestPrediction =\r\n      typeof labels[0] == \"string\"\r\n        ? (labels[\r\n            predictions.indexOf(Math.max(...Array.from(predictions)))\r\n          ] as string)\r\n        : labels[predictions.indexOf(Math.max(...Array.from(predictions)))][1];\r\n\r\n    predictions.sort((a, b) => b - a);\r\n    if (predictions[0] - predictions[1] < 10) {\r\n      return \"(?) \" + bestPrediction;\r\n    }\r\n    return bestPrediction;\r\n  }\r\n\r\n  masteryTokenFromRect(rect: Rect) {\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(\r\n        this.canvas,\r\n        rect.x + rect.w / 2,\r\n        rect.y - 2,\r\n        1,\r\n        1,\r\n        0,\r\n        0,\r\n        1,\r\n        1\r\n      );\r\n    const [r, g, b] = Array.from(\r\n      this.workCanvas.getContext(\"2d\")?.getImageData(0, 0, 1, 1).data\r\n    );\r\n    const hue = this.rgb2hue(r, g, b);\r\n    if (hue > 275 && hue < 325) return 6;\r\n    if (hue > 150 && hue < 200) return 7;\r\n    return 0;\r\n  }\r\n\r\n  lootCountFromRect(rect: Rect) {\r\n    const offset = {\r\n      \"1024\": {\r\n        w: 20,\r\n        h: 9,\r\n        xPad: 4,\r\n        yPad: 5,\r\n        minNumberHeight: 7,\r\n        maxNumberHeight: 8,\r\n      },\r\n      \"1280\": {\r\n        w: 25,\r\n        h: 9,\r\n        xPad: 4,\r\n        yPad: 7,\r\n        minNumberHeight: 8,\r\n        maxNumberHeight: 9,\r\n      },\r\n      \"1600\": {\r\n        w: 30,\r\n        h: 13,\r\n        xPad: 6,\r\n        yPad: 7,\r\n        minNumberHeight: 10,\r\n        maxNumberHeight: 13,\r\n      },\r\n      \"1920\": {\r\n        w: 35,\r\n        h: 16,\r\n        xPad: 8,\r\n        yPad: 9,\r\n        minNumberHeight: 11,\r\n        maxNumberHeight: 14,\r\n      },\r\n    }[this.clientWidth];\r\n\r\n    this.workCanvas.width = offset.w;\r\n    this.workCanvas.height = offset.h;\r\n\r\n    let x = Math.round(rect.x + rect.w - offset.w - offset.xPad);\r\n    let y = Math.round(rect.y + rect.h - offset.h - offset.yPad);\r\n    let [w, h] = [offset.w, offset.h];\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(this.canvas, x, y, w, h, 0, 0, w, h);\r\n\r\n    let picture: number[] | number[][] = Array.from(\r\n      this.workCanvas.getContext(\"2d\")?.getImageData(0, 0, offset.w, offset.h)\r\n        .data\r\n    )\r\n      .map((v: number, i: number, a: number[]) =>\r\n        i % 4 !== 0 ? 0 : v > 128 && (v > a[i + 2] || 0) ? 1 : 0\r\n      )\r\n      .filter((_: number, i: number) => i % 4 === 0);\r\n\r\n    if (typeof picture !== \"undefined\")\r\n      picture = [...Array(Math.ceil(picture.length / offset.w))].map((_) =>\r\n        (picture as number[]).splice(0, offset.w)\r\n      );\r\n\r\n    while (picture[0] && picture[0].join(\"\").match(/0{5}$/)) {\r\n      picture.shift();\r\n      y++;\r\n      h--;\r\n    }\r\n\r\n    while (picture[0] && picture[picture.length - 1].join(\"\").match(/0{5}$/)) {\r\n      picture.pop();\r\n      h--;\r\n    }\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(\r\n        this.canvas,\r\n        Math.round(rect.x + rect.w - 15 - offset.xPad),\r\n        Math.round(rect.y + rect.h - offset.h - offset.yPad - 2),\r\n        15,\r\n        1,\r\n        0,\r\n        0,\r\n        15,\r\n        1\r\n      );\r\n\r\n    const rowAboveLineDark =\r\n      Math.max(\r\n        ...Array.from(\r\n          this.workCanvas.getContext(\"2d\")?.getImageData(0, 0, 15, 1).data\r\n        )\r\n          .map((v: number, i: number, a: number[]) =>\r\n            i % 4 !== 0 ? 0 : v > 128 && (v > a[i + 2] || 0) ? 1 : 0\r\n          )\r\n          .filter((_: number, i: number) => i % 4 === 0)\r\n      ) === 0;\r\n\r\n    const isNumber =\r\n      picture.length <= offset.maxNumberHeight &&\r\n      picture.length >= offset.minNumberHeight &&\r\n      rowAboveLineDark;\r\n\r\n    if (isNumber) {\r\n      let foundNumbers = \"\";\r\n\r\n      const freeColumns = [...Array(picture[0].length)].map((_, i) =>\r\n        [...Array(picture.length)]\r\n          .map((_, j) => (picture as number[][])[j][i])\r\n          .reduce((a, b) => a + b, 0)\r\n      );\r\n\r\n      let numberColumnsRanges = [];\r\n      let start: number | false = false;\r\n      for (let i = freeColumns.length - 1; i >= 0; i--) {\r\n        if (freeColumns[i] > 0 && start === false) start = i;\r\n        else if (freeColumns[i] === 0 && start !== false) {\r\n          numberColumnsRanges.push([i + 1, start]);\r\n          start = false;\r\n        }\r\n      }\r\n\r\n      this.workCanvas.width = 7;\r\n      this.workCanvas.height = 7;\r\n      numberColumnsRanges = numberColumnsRanges\r\n        .reverse()\r\n        .filter((v) => v[1] - v[0] > 2);\r\n\r\n      numberColumnsRanges.forEach((range: number[]) => {\r\n        this.workCanvas\r\n          .getContext(\"2d\")\r\n          ?.drawImage(\r\n            this.canvas,\r\n            x + range[0],\r\n            y,\r\n            range[1] - range[0] + 1,\r\n            h,\r\n            0,\r\n            0,\r\n            7,\r\n            7\r\n          );\r\n\r\n        let number: number[] = Array.from(\r\n          this.workCanvas\r\n            .getContext(\"2d\")\r\n            ?.getImageData(0, 0, 7, 7)\r\n            .data.filter((_: number, i: number) => i % 4 === 0)\r\n            .map((v: number) => (v > 100 ? 1 : 0)) as Uint8ClampedArray\r\n        );\r\n\r\n        const tensor = tf.tensor(number, [1, 7, 7]);\r\n\r\n        const predictions = (\r\n          this.models.numbers.predict(tensor) as tf.Tensor\r\n        ).dataSync();\r\n\r\n        foundNumbers += predictions\r\n          .indexOf(Math.max(...Array.from(predictions)))\r\n          .toString();\r\n      });\r\n      return parseInt(foundNumbers, 10);\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  computeRects(): Rect[] {\r\n    const categories = [\r\n      \"materials\",\r\n      \"champions\",\r\n      \"skins\",\r\n      \"little_legends\",\r\n      \"eternals\",\r\n      \"emotes\",\r\n      \"ward_skins\",\r\n      \"icons\",\r\n    ];\r\n\r\n    const offset = {\r\n      \"1920\": {\r\n        xStart: 12,\r\n        yStart: 2,\r\n        lineHeight: 68.4,\r\n        iconWidth: 105,\r\n        iconHeight: 105,\r\n        iconOffsetX: 125,\r\n        iconOffsetY: 127.57,\r\n      },\r\n      \"1600\": {\r\n        xStart: 8,\r\n        yStart: 3,\r\n        lineHeight: 56.3,\r\n        iconWidth: 87,\r\n        iconHeight: 87,\r\n        iconOffsetX: 103.6,\r\n        iconOffsetY: 106.25,\r\n      },\r\n      \"1280\": {\r\n        xStart: 7,\r\n        yStart: 1,\r\n        lineHeight: 45,\r\n        iconWidth: 70,\r\n        iconHeight: 70,\r\n        iconOffsetX: 83,\r\n        iconOffsetY: 85,\r\n      },\r\n      \"1024\": {\r\n        xStart: 5,\r\n        yStart: 1,\r\n        lineHeight: 37,\r\n        iconWidth: 56,\r\n        iconHeight: 56,\r\n        iconOffsetX: 66.4,\r\n        iconOffsetY: 68.02,\r\n      },\r\n    }[this.clientWidth];\r\n\r\n    const lines = [];\r\n    const centerColumn = this.canvas\r\n      .getContext(\"2d\")\r\n      .getImageData(\r\n        Math.round(this.canvas.width / 2),\r\n        0,\r\n        1,\r\n        this.canvas.height\r\n      ).data;\r\n    for (let i = 0; i < centerColumn.length; i += 4) {\r\n      if (centerColumn[i] > 70) lines.push(i / 4);\r\n    }\r\n\r\n    let items = [];\r\n    let currLine = lines.shift() || Infinity;\r\n    let currCategory = \"\";\r\n    let canvasIndex = 0;\r\n    let y = offset.yStart;\r\n\r\n    while (y < this.canvas.height && canvasIndex < this.canvasList.length) {\r\n      if (y > 30000) {\r\n        y -= 30000;\r\n        canvasIndex++;\r\n      }\r\n\r\n      if (y + offset.iconHeight < currLine) {\r\n        if (currCategory !== \"none\") {\r\n          for (let i = 0; i < 4; i++) {\r\n            items.push({\r\n              cat: currCategory,\r\n              canvas: this.canvasList[canvasIndex],\r\n              x: offset.xStart + offset.iconOffsetX * i,\r\n              y: y,\r\n              w: offset.iconWidth,\r\n              h: offset.iconHeight,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        currLine = lines.shift() || Infinity;\r\n        currCategory = categories.shift() || \"none\";\r\n\r\n        y -= offset.lineHeight;\r\n\r\n        if (items.length > 3) {\r\n          const checkLastThree = [\r\n            items.pop(),\r\n            items.pop(),\r\n            items.pop(),\r\n          ].reverse();\r\n\r\n          checkLastThree.forEach((item) => {\r\n            const squareImage = this.canvas\r\n              .getContext(\"2d\")\r\n              .getImageData(item.x, item.y, item.w, item.h).data;\r\n            root: for (let i = 0; i < Math.max(item.y, item.x); i++) {\r\n              for (let c = 0; c < 3; c++) {\r\n                if (squareImage[i * 4 + i * item.w * 4 + c] > 50) {\r\n                  items.push(item);\r\n                  break root;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n      y += offset.iconOffsetY;\r\n    }\r\n    return items;\r\n  }\r\n}\r\n","import Capture from \"../Capture\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\ntype Color = [r: number, g: number, b: number];\r\ntype Rect = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  canvas: HTMLCanvasElement;\r\n  cat?: string;\r\n  type?: string;\r\n  count?: number;\r\n  name?: string;\r\n  data?: any;\r\n};\r\n\r\ntype LootLabels = [id: string, name: string, price: number, legacy: number][];\r\n\r\ntype LookupTable = string[];\r\n\r\nexport default class Champions extends Capture {\r\n  constructor(\r\n    video: React.RefObject<HTMLVideoElement>,\r\n    currentViewFunction: () => string | false\r\n  ) {\r\n    const checkFunction = () => currentViewFunction() === \"champions\";\r\n\r\n    const options = {\r\n      screenshotArea: {\r\n        \"1920\": { x: 398, y: 218, w: 1138, h: 852, add: 5 },\r\n        \"1600\": { x: 332, y: 180, w: 950, h: 713, add: 5 },\r\n        \"1280\": { x: 264, y: 145, w: 762, h: 565, add: 5 },\r\n        \"1024\": { x: 210, y: 116, w: 613, h: 454, add: 5 },\r\n      },\r\n\r\n      matchingArea: {\r\n        \"1920\": { w: 160, h: 160 },\r\n        \"1600\": { w: 160, h: 120 },\r\n        \"1280\": { w: 160, h: 80 },\r\n        \"1024\": { w: 160, h: 80 },\r\n      },\r\n\r\n      scrollBar: {\r\n        \"1920\": { x: 1574, y1: 211, y2: 1073 },\r\n        \"1600\": { x: 1312, y1: 175, y2: 894 },\r\n        \"1280\": { x: 1049, y1: 140, y2: 715 },\r\n        \"1024\": { x: 840, y1: 112, y2: 572 },\r\n      },\r\n\r\n      loadCheck: {\r\n        \"1920\": [{ x: 73, y: 504, color: [240, 230, 210] as Color }],\r\n        \"1600\": [{ x: 60, y: 420, color: [223, 214, 196] as Color }],\r\n        \"1280\": [{ x: 49, y: 335, color: [236, 226, 206] as Color }],\r\n        \"1024\": [{ x: 40, y: 266, color: [236, 226, 206] as Color }],\r\n      },\r\n    };\r\n    super(video, options, checkFunction);\r\n\r\n    this.isViewingUnowned = false;\r\n    this.warnMessage = null;\r\n    this.prepareClassificationAssets();\r\n  }\r\n\r\n  lookupTable: LookupTable;\r\n  championCollectionModel: tf.LayersModel;\r\n  classifiedRects: Rect[];\r\n  isViewingUnowned: boolean | null;\r\n  warnMessage: string | null;\r\n\r\n  cropAlphaFromCanvases() {\r\n    super.cropAlphaFromCanvases();\r\n    this.isViewingUnowned = this.checkIsViewingUnowned();\r\n  }\r\n\r\n  recognize() {\r\n    super.recognize();\r\n    if (this.classifiedRects) return this.classifiedRects;\r\n\r\n    const rects = this.computeRects();\r\n    this.classifiedRects = this.classifyRects(rects);\r\n\r\n    this.cropCanvasesByRects(this.classifiedRects);\r\n  }\r\n\r\n  annotateImages() {\r\n    super.annotateImages();\r\n    if (this.classifiedRects == null) return;\r\n\r\n    this.classifiedRects.forEach((rect: Rect, i: number) => {\r\n      const annotatedCtx = rect.canvas.getContext(\"2d\");\r\n\r\n      annotatedCtx.beginPath();\r\n\r\n      annotatedCtx.globalAlpha = 0.4;\r\n      annotatedCtx.fillStyle = \"#000\";\r\n      annotatedCtx.fillRect(rect.x, rect.y, rect.w, rect.h);\r\n      annotatedCtx.globalAlpha = 1;\r\n\r\n      annotatedCtx.lineWidth = 0.5;\r\n      annotatedCtx.strokeStyle =\r\n        (rect.name || \"\").indexOf(\"(?)\") < 0 ? \"#fff\" : \"yellow\";\r\n      annotatedCtx.rect(rect.x, rect.y, rect.w, rect.h);\r\n      annotatedCtx.stroke();\r\n      if (\r\n        typeof rect.type !== \"undefined\" &&\r\n        typeof rect.count !== \"undefined\" &&\r\n        typeof rect.name !== \"undefined\"\r\n      ) {\r\n        annotatedCtx.font = \"10px Arial\";\r\n        annotatedCtx.fillStyle = \"#fff\";\r\n        annotatedCtx.fillText(rect.name, rect.x + 3, rect.y + 15, rect.w - 3);\r\n        annotatedCtx.fillText(\r\n          \"id: \" + rect.data.id,\r\n          rect.x + 3,\r\n          rect.y + 30,\r\n          rect.w - 3\r\n        );\r\n        annotatedCtx.fillText(\r\n          \"owned: \" + rect.data.owned,\r\n          rect.x + 3,\r\n          rect.y + 45,\r\n          rect.w - 3\r\n        );\r\n        annotatedCtx.fillText(\r\n          \"mastery: \" + rect.data.mastery,\r\n          rect.x + 3,\r\n          rect.y + 60,\r\n          rect.w - 3\r\n        );\r\n        annotatedCtx.fillText(\r\n          \"chest available: \" + rect.data.chestAvailable,\r\n          rect.x + 3,\r\n          rect.y + 75,\r\n          rect.w - 3\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async prepareClassificationAssets() {\r\n    let [lookupTableLoot, lookupTableChampions, championCollectionModel] =\r\n      await Promise.all([\r\n        fetch(\"/lookup_data/loot.json\").then((res) => res.json()),\r\n        fetch(\"/lookup_data/collection_champions.json\").then((res) =>\r\n          res.json()\r\n        ),\r\n        tf.loadLayersModel(\"/models/coll_champions/model.json\"),\r\n      ]);\r\n\r\n    this.lookupTable = lookupTableChampions.map((v: string) => {\r\n      return [\r\n        (lookupTableLoot[\"champions\"] as LootLabels).filter(\r\n          (l) => l[0] === v\r\n        )[0][1],\r\n        v,\r\n      ];\r\n    });\r\n\r\n    this.championCollectionModel = championCollectionModel;\r\n    this.loaded = true;\r\n  }\r\n\r\n  classifyRects(rects: Rect[]) {\r\n    rects.forEach((rect: Rect, i: number) => {\r\n      const prediction = this.getPredictionFromRect(\r\n        rect,\r\n        this.championCollectionModel,\r\n        this.lookupTable\r\n      );\r\n      if (typeof prediction !== \"undefined\") {\r\n        const ownership = this.isViewingUnowned\r\n          ? this.checkOwnershipFromRect(rect)\r\n          : true;\r\n        rects[i] = {\r\n          ...rects[i],\r\n          type: \"collection_champion\",\r\n          count: 1,\r\n          name: prediction[0],\r\n          data: {\r\n            id: prediction[1],\r\n            owned: ownership,\r\n            mastery: ownership ? this.checkMasteryFromRect(rect) : 0,\r\n            chestAvailable: ownership ? this.checkChestAvailable(rect) : false,\r\n          },\r\n        };\r\n      }\r\n    });\r\n    return rects;\r\n  }\r\n\r\n  getPredictionFromRect(\r\n    rect: Rect,\r\n    model: tf.LayersModel,\r\n    labels: LookupTable\r\n  ): string {\r\n    if (!this.complete) return;\r\n\r\n    this.workCanvas.width = 28;\r\n    this.workCanvas.height = 28;\r\n\r\n    const lightValues = [];\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(this.canvas, rect.x, rect.y, rect.w, rect.h, 0, 0, 28, 28);\r\n    let imageData = this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.getImageData(0, 0, 28, 28);\r\n    let pixels = imageData?.data;\r\n    if (typeof pixels !== \"undefined\") {\r\n      for (var j = 0; j < pixels.length; j += 4) {\r\n        let lightness =\r\n          pixels[j] * 0.299 + pixels[j + 1] * 0.587 + pixels[j + 2] * 0.114;\r\n        lightValues.push(lightness / 255);\r\n      }\r\n    }\r\n    const tensor = tf.tensor(lightValues, [1, 28, 28]);\r\n\r\n    const predictions = (model.predict(tensor) as tf.Tensor).dataSync();\r\n\r\n    const bestPrediction =\r\n      labels[predictions.indexOf(Math.max(...Array.from(predictions)))];\r\n\r\n    predictions.sort((a, b) => b - a);\r\n    if (predictions[0] - predictions[1] < 10) {\r\n      return \"(?) \" + bestPrediction;\r\n    }\r\n    return bestPrediction;\r\n  }\r\n\r\n  checkOwnershipFromRect(rect: Rect) {\r\n    if (!this.complete) return;\r\n\r\n    this.workCanvas.width = 28;\r\n    this.workCanvas.height = 1;\r\n\r\n    const offset = {\r\n      \"1920\": 305,\r\n      \"1600\": 255,\r\n      \"1280\": 205,\r\n      \"1024\": 165,\r\n    }[this.clientWidth];\r\n\r\n    const circleHue = this.rgb2hue(\r\n      this.getPixelColor(rect.x + rect.w + 5, rect.y)\r\n    );\r\n\r\n    if (175 < circleHue && circleHue < 195) {\r\n      return \"unknown(free week rotation)\";\r\n    }\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      ?.drawImage(\r\n        this.canvas,\r\n        Math.floor(rect.x + rect.w / 2) - 10,\r\n        rect.y + offset,\r\n        20,\r\n        1,\r\n        0,\r\n        0,\r\n        20,\r\n        1\r\n      );\r\n\r\n    return (\r\n      Math.max(\r\n        ...Array.from(\r\n          this.workCanvas\r\n            .getContext(\"2d\")\r\n            .getImageData(0, 0, 20, 1)\r\n            .data.filter((_, i) => i % 4 === 0)\r\n        )\r\n      ) < 50\r\n    );\r\n  }\r\n\r\n  checkMasteryFromRect(rect: Rect) {\r\n    const offset = {\r\n      \"1920\": [6, 66],\r\n      \"1600\": [5, 55],\r\n      \"1280\": [4, 44],\r\n      \"1024\": [3, 35],\r\n    }[this.clientWidth];\r\n\r\n    const flagHue = this.rgb2hue(\r\n      this.getPixelColor(rect.x + 2, rect.y + rect.h + 2)\r\n    );\r\n\r\n    if (195 < flagHue && flagHue < 210) return 7;\r\n    if (285 < flagHue && flagHue < 300) return 6;\r\n    if (345 < flagHue && flagHue < 360) return 5;\r\n\r\n    return Array.from(\r\n      rect.canvas\r\n        .getContext(\"2d\")\r\n        .getImageData(rect.x + offset[0], rect.y + rect.h, 1, offset[1])\r\n        .data.filter((_, i) => i % 4 === 0)\r\n    )\r\n      .map((v) => (v > 75 ? 1 : 0))\r\n      .join(\"\")\r\n      .replace(/1+/g, \"1\")\r\n      .replace(/0/g, \"\").length;\r\n  }\r\n\r\n  checkChestAvailable(rect: Rect) {\r\n    const offset = {\r\n      \"1920\": 30,\r\n      \"1600\": 25,\r\n      \"1280\": 20,\r\n      \"1024\": 18,\r\n    }[this.clientWidth];\r\n\r\n    const circle1Hue = this.rgb2hue(\r\n      this.getPixelColor(rect.x + rect.w + 5, rect.y)\r\n    );\r\n\r\n    const circle2Hue = this.rgb2hue(\r\n      this.getPixelColor(rect.x + rect.w + 5, rect.y + offset)\r\n    );\r\n\r\n    if (\r\n      (circle1Hue > 35 && circle1Hue < 55) ||\r\n      (circle2Hue > 35 && circle2Hue < 55)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  computeRects() {\r\n    this.workCanvas.width = 10;\r\n    this.workCanvas.height = 10;\r\n\r\n    const offset = {\r\n      \"1920\": {\r\n        xStart: 7,\r\n        yStart: 6,\r\n        iconWidth: 201,\r\n        iconHeight: 246,\r\n        iconOffsetX: 231,\r\n        iconOffsetY: 375,\r\n      },\r\n      \"1600\": {\r\n        xStart: 5,\r\n        yStart: 7,\r\n        iconWidth: 168,\r\n        iconHeight: 206,\r\n        iconOffsetX: 192.54,\r\n        iconOffsetY: 312.54,\r\n      },\r\n      \"1280\": {\r\n        xStart: 6,\r\n        yStart: 7,\r\n        iconWidth: 134,\r\n        iconHeight: 163,\r\n        iconOffsetX: 154,\r\n        iconOffsetY: 250,\r\n      },\r\n      \"1024\": {\r\n        xStart: 6,\r\n        yStart: 6,\r\n        iconWidth: 107,\r\n        iconHeight: 131,\r\n        iconOffsetX: 123.25,\r\n        iconOffsetY: 200,\r\n      },\r\n    }[this.clientWidth];\r\n\r\n    let rects: Rect[] = [];\r\n    let x = offset.xStart;\r\n    let y = offset.yStart;\r\n    let canvasIndex = 0;\r\n\r\n    while (\r\n      y + offset.iconHeight < this.canvas.height &&\r\n      canvasIndex < this.canvasList.length\r\n    ) {\r\n      if (y > 30000) {\r\n        y -= 30000;\r\n        canvasIndex++;\r\n      }\r\n      if (x < this.canvas.width) {\r\n        rects.push({\r\n          canvas: this.canvasList[canvasIndex],\r\n          cat: \"coll_champ\",\r\n          x,\r\n          y,\r\n          w: offset.iconWidth,\r\n          h: offset.iconHeight,\r\n        });\r\n        x += offset.iconOffsetX;\r\n      } else {\r\n        y += offset.iconOffsetY;\r\n        x = offset.xStart;\r\n      }\r\n    }\r\n\r\n    if (rects.length >= 5) {\r\n      const checkLastFive = [\r\n        rects.pop(),\r\n        rects.pop(),\r\n        rects.pop(),\r\n        rects.pop(),\r\n        rects.pop(),\r\n      ].reverse();\r\n\r\n      checkLastFive.forEach((rect) => {\r\n        const image = rect.canvas\r\n          .getContext(\"2d\")\r\n          .getImageData(rect.x, rect.y, rect.w, rect.h)\r\n          .data.filter((n, i) => i % 4 !== 3);\r\n        for (let i = 0; i < image.length; i++) {\r\n          if (image[i] > 120) {\r\n            rects.push(rect);\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return rects;\r\n  }\r\n\r\n  attemptScreenshot() {\r\n    if (this.checkIsViewingUnowned()) {\r\n      this.warnMessage = `Make sure \"Show Unowned\" option is disabled in the client.`;\r\n      return;\r\n    }\r\n    this.warnMessage = null;\r\n    super.attemptScreenshot();\r\n  }\r\n\r\n  checkIsViewingUnowned() {\r\n    const check = {\r\n      \"1024\": { x: 30, y: 294 },\r\n      \"1280\": { x: 37, y: 373 },\r\n      \"1600\": { x: 46, y: 465 },\r\n      \"1920\": { x: 55, y: 559 },\r\n    }[this.clientWidth];\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      .drawImage(this.videoElement.current, check.x, check.y, 1, 1, 0, 0, 1, 1);\r\n    const checkPixel = this.workCanvas\r\n      .getContext(\"2d\")\r\n      .getImageData(0, 0, 1, 1).data;\r\n\r\n    return checkPixel[0] > 50;\r\n  }\r\n}\r\n","import Capture from \"../Capture\";\r\n// import * as tf from \"@tensorflow/tfjs\";\r\n\r\ntype Color = [r: number, g: number, b: number];\r\n\r\nexport default class Emotes extends Capture {\r\n  constructor(\r\n    video: React.RefObject<HTMLVideoElement>,\r\n    currentViewFunction: () => string | false\r\n  ) {\r\n    const checkFunction = () => currentViewFunction() === \"emotes\";\r\n\r\n    const options = {\r\n      screenshotArea: {\r\n        \"1920\": { x: 49, y: 331, w: 505, h: 719, add: 120, yBottomCheck: 1073 },\r\n        \"1600\": { x: 40, y: 275, w: 422, h: 597, add: 100, yBottomCheck: 895 },\r\n        \"1280\": { x: 31, y: 220, w: 340, h: 481, add: 85, yBottomCheck: 717 },\r\n        \"1024\": { x: 24, y: 174, w: 274, h: 380, add: 64, yBottomCheck: 573 },\r\n      },\r\n\r\n      matchingArea: {\r\n        \"1920\": { w: 160, h: 160 },\r\n        \"1600\": { w: 140, h: 140 },\r\n        \"1280\": { w: 110, h: 110 },\r\n        \"1024\": { w: 80, h: 80 },\r\n      },\r\n\r\n      scrollBar: {\r\n        \"1920\": { x: 574, y1: 326, y2: 1067 },\r\n        \"1600\": { x: 478, y1: 272, y2: 890 },\r\n        \"1280\": { x: 382, y1: 218, y2: 713 },\r\n        \"1024\": { x: 306, y1: 173, y2: 570 },\r\n      },\r\n\r\n      loadCheck: {\r\n        \"1920\": [\r\n          { x: 1027, y: 493, color: [100, 78, 30] as Color },\r\n          { x: 1135, y: 493, color: [100, 78, 30] as Color },\r\n          { x: 1027, y: 603, color: [74, 58, 29] as Color },\r\n          { x: 1135, y: 603, color: [75, 59, 29] as Color },\r\n        ],\r\n        \"1600\": [\r\n          { x: 857, y: 412, color: [100, 78, 30] as Color },\r\n          { x: 947, y: 412, color: [100, 78, 30] as Color },\r\n          { x: 857, y: 503, color: [74, 58, 29] as Color },\r\n          { x: 947, y: 503, color: [74, 58, 29] as Color },\r\n        ],\r\n        \"1280\": [\r\n          { x: 685, y: 328, color: [100, 78, 30] as Color },\r\n          { x: 757, y: 329, color: [100, 78, 30] as Color },\r\n          { x: 685, y: 402, color: [74, 58, 29] as Color },\r\n          { x: 757, y: 402, color: [73, 58, 29] as Color },\r\n        ],\r\n        \"1024\": [\r\n          { x: 548, y: 262, color: [100, 78, 30] as Color },\r\n          { x: 606, y: 263, color: [100, 78, 30] as Color },\r\n          { x: 547, y: 321, color: [74, 58, 29] as Color },\r\n          { x: 605, y: 321, color: [73, 57, 29] as Color },\r\n        ],\r\n      },\r\n    };\r\n    super(video, options, checkFunction);\r\n\r\n    this.warnMessage = null;\r\n    //   this.prepareClassificationAssets();\r\n  }\r\n\r\n  warnMessage: string | null;\r\n\r\n  attemptScreenshot() {\r\n    if (this.checkIsViewingUnowned()) {\r\n      this.warnMessage = `Make sure \"Show Unowned\" option is disabled in the client.`;\r\n      return;\r\n    }\r\n    this.warnMessage = null;\r\n    super.attemptScreenshot();\r\n  }\r\n\r\n  checkIsViewingUnowned() {\r\n    const check = {\r\n      \"1024\": { x: 206, y: 150 },\r\n      \"1280\": { x: 258, y: 190 },\r\n      \"1600\": { x: 322, y: 236 },\r\n      \"1920\": { x: 386, y: 284 },\r\n    }[this.clientWidth];\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      .drawImage(this.videoElement.current, check.x, check.y, 1, 1, 0, 0, 1, 1);\r\n    const checkPixel = this.workCanvas\r\n      .getContext(\"2d\")\r\n      .getImageData(0, 0, 1, 1).data;\r\n\r\n    return checkPixel[0] > 50;\r\n  }\r\n}\r\n","import Capture from \"../Capture\";\r\n// import * as tf from \"@tensorflow/tfjs\";\r\n\r\ntype Color = [r: number, g: number, b: number];\r\n\r\nexport default class Icons extends Capture {\r\n  constructor(\r\n    video: React.RefObject<HTMLVideoElement>,\r\n    currentViewFunction: () => string | false\r\n  ) {\r\n    const checkFunction = () => currentViewFunction() === \"icons\";\r\n\r\n    const options = {\r\n      screenshotArea: {\r\n        \"1920\": {\r\n          x: 389,\r\n          y: 275,\r\n          w: 1130,\r\n          h: 757,\r\n          add: 80,\r\n          yBottomCheck: 1065,\r\n        },\r\n        \"1600\": {\r\n          x: 322,\r\n          y: 229,\r\n          w: 945,\r\n          h: 635,\r\n          add: 70,\r\n          yBottomCheck: 890,\r\n        },\r\n        \"1280\": {\r\n          x: 256,\r\n          y: 182,\r\n          w: 760,\r\n          h: 495,\r\n          add: 50,\r\n          yBottomCheck: 710,\r\n        },\r\n        \"1024\": {\r\n          x: 203,\r\n          y: 143,\r\n          w: 612,\r\n          h: 371,\r\n          add: 40,\r\n          yBottomCheck: 570,\r\n        },\r\n      },\r\n\r\n      matchingArea: {\r\n        \"1920\": { w: 160, h: 160 },\r\n        \"1600\": { w: 160, h: 140 },\r\n        \"1280\": { w: 160, h: 110 },\r\n        \"1024\": { w: 160, h: 80 },\r\n      },\r\n\r\n      scrollBar: {\r\n        \"1920\": { x: 1574, y1: 211, y2: 1073 },\r\n        \"1600\": { x: 1312, y1: 175, y2: 894 },\r\n        \"1280\": { x: 1049, y1: 140, y2: 715 },\r\n        \"1024\": { x: 840, y1: 112, y2: 572 },\r\n      },\r\n\r\n      loadCheck: {\r\n        \"1920\": [{ x: 223, y: 462, color: [254, 4, 10] as Color }],\r\n        \"1600\": [{ x: 186, y: 385, color: [254, 4, 9] as Color }],\r\n        \"1280\": [{ x: 149, y: 309, color: [248, 3, 13] as Color }],\r\n        \"1024\": [{ x: 120, y: 247, color: [253, 4, 9] as Color }],\r\n      },\r\n    };\r\n    super(video, options, checkFunction);\r\n\r\n    this.warnMessage = null;\r\n    //   this.prepareClassificationAssets();\r\n  }\r\n\r\n  warnMessage: string | null;\r\n\r\n  attemptScreenshot() {\r\n    if (!this.checkIsViewingMyCollection()) {\r\n      this.warnMessage = `Make sure you have \"My Collection\" selected from the dropdown in the client.`;\r\n      return;\r\n    }\r\n    this.warnMessage = null;\r\n    super.attemptScreenshot();\r\n  }\r\n\r\n  checkIsViewingMyCollection() {\r\n    const check = {\r\n      \"1024\": { x: 46, y: 501 },\r\n      \"1280\": { x: 58, y: 628 },\r\n      \"1600\": { x: 72, y: 786 },\r\n      \"1920\": { x: 86, y: 942 },\r\n    }[this.clientWidth];\r\n\r\n    this.workCanvas\r\n      .getContext(\"2d\")\r\n      .drawImage(this.videoElement.current, check.x, check.y, 1, 1, 0, 0, 1, 1);\r\n    const checkPixel = this.workCanvas\r\n      .getContext(\"2d\")\r\n      .getImageData(0, 0, 1, 1).data;\r\n\r\n    return checkPixel[0] > 50;\r\n  }\r\n}\r\n","import { imag } from \"@tensorflow/tfjs-core\";\r\n\r\ntype LookupLabel = [id: number, name: string, price: number, legacy: number];\r\ntype LookupLabels = LookupLabel[] | string[];\r\n\r\ntype LookupTable = {\r\n  champions: LookupLabels;\r\n  skins: LookupLabels;\r\n  wards: LookupLabels;\r\n  [x: string]: any;\r\n};\r\n\r\ntype Rect = {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  canvas: HTMLCanvasElement;\r\n  cat?: string;\r\n  type?: string;\r\n  count?: number;\r\n  name?: string;\r\n  data?: any;\r\n};\r\n\r\ntype championsTableRow = {\r\n  id: string | number;\r\n  name: string;\r\n  owned: boolean | string;\r\n  mastery: number;\r\n  chestAvail: boolean;\r\n  shards: number;\r\n  perms: number;\r\n  token6: number;\r\n  token7: number;\r\n  eternalShards: number;\r\n  storeBE: number;\r\n  storeRP: number;\r\n  ugradeBE: number;\r\n  disenchantS: number;\r\n  disenchantP: number;\r\n};\r\n\r\nexport default class Data {\r\n  loot_lookup_table: LookupTable;\r\n  champions: { columns: any; data: championsTableRow[] };\r\n  blueEssenceSpent: number;\r\n\r\n  constructor(loot_lookup_table: LookupTable, rects: Rect[]) {\r\n    this.loot_lookup_table = loot_lookup_table;\r\n    this.champions = this.championsTable(rects);\r\n    this.blueEssenceSpent = this.calcBlueEssenceSpent(this.champions);\r\n  }\r\n\r\n  calcBlueEssenceSpent(champions: any) {\r\n    const data = champions.data;\r\n    return data\r\n      .flatMap((v: any) => (v.owned ? v.storeBE : []))\r\n      .reduce((a: number, b: number) => a + b);\r\n  }\r\n\r\n  championsTable(rects: Rect[]) {\r\n    const RP2data = {\r\n      \"260\": {\r\n        BE: 450,\r\n        upgrade: 270,\r\n        disenchantS: 90,\r\n        disenchantP: 225,\r\n      },\r\n      \"585\": {\r\n        BE: 1350,\r\n        upgrade: 810,\r\n        disenchantS: 270,\r\n        disenchantP: 675,\r\n      },\r\n      \"790\": {\r\n        BE: 3150,\r\n        upgrade: 1890,\r\n        disenchantS: 630,\r\n        disenchantP: 1575,\r\n      },\r\n      \"880\": {\r\n        BE: 4800,\r\n        upgrade: 2880,\r\n        disenchantS: 960,\r\n        disenchantP: 2400,\r\n      },\r\n      \"975\": {\r\n        BE: 6300,\r\n        upgrade: 3780,\r\n        disenchantS: 1260,\r\n        disenchantP: 3150,\r\n      },\r\n    };\r\n\r\n    const champList = (this.loot_lookup_table.champions as LookupLabel[]).map(\r\n      (champ: LookupLabel) => champ[1]\r\n    );\r\n\r\n    const data = (this.loot_lookup_table.champions as LookupLabel[]).map(\r\n      (champ: LookupLabel) => ({\r\n        id: champ[0],\r\n        name: champ[1],\r\n        owned: false,\r\n        mastery: 0,\r\n        chestAvail: false,\r\n        shards: 0,\r\n        perms: 0,\r\n        token6: 0,\r\n        token7: 0,\r\n        eternalShards: 0,\r\n        storeBE: RP2data[champ[2] as 260 | 585 | 790 | 880 | 975].BE,\r\n        storeRP: champ[2],\r\n        ugradeBE: RP2data[champ[2] as 260 | 585 | 790 | 880 | 975].upgrade,\r\n        disenchantS:\r\n          RP2data[champ[2] as 260 | 585 | 790 | 880 | 975].disenchantS,\r\n        disenchantP:\r\n          RP2data[champ[2] as 260 | 585 | 790 | 880 | 975].disenchantP,\r\n      })\r\n    );\r\n\r\n    rects.forEach((rect) => {\r\n      const index = champList.indexOf(rect.name.replace(\"(?) \", \"\"));\r\n      if (index !== -1) {\r\n        if (rect.type === \"token6\") data[index].token6 = rect.count;\r\n        if (rect.type === \"token7\") data[index].token7 = rect.count;\r\n        if (rect.type === \"eternal\") data[index].eternalShards = rect.count;\r\n\r\n        if (typeof rect.cat !== \"undefined\" && rect.cat === \"champions\") {\r\n          if (rect.type === \"shard\") data[index].shards = rect.count;\r\n          if (rect.type === \"permanent\") data[index].perms = rect.count;\r\n        }\r\n        if (rect.type === \"collection_champion\") {\r\n          data[index].owned = rect.data.owned;\r\n          data[index].mastery = rect.data.mastery;\r\n          data[index].chestAvail = rect.data.chestAvailable;\r\n        }\r\n      }\r\n    });\r\n\r\n    const columns = [\r\n      // {\r\n      //   Header: \"Image\",\r\n      //   accessor: \"id\",\r\n      //   Cell: (data: any) => (\r\n      //     <img\r\n      //       src={`https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/champion-tiles/${data.value.replace(\r\n      //         /...$/,\r\n      //         \"\"\r\n      //       )}/${data.value}.jpg`}\r\n      //       alt=\"\"\r\n      //     />\r\n      //   ),\r\n      // },\r\n      {\r\n        Header: (\r\n          <>\r\n            Champion, Mastery and\r\n            <br />\r\n            Chest Avavilability\r\n          </>\r\n        ),\r\n        accessor: \"name\",\r\n        Cell: (data: any) => {\r\n          const row = data.row.original;\r\n          return [\r\n            row.owned ? (\r\n              <span>\r\n                <strong>{row.name}</strong>\r\n              </span>\r\n            ) : (\r\n              <span>{row.name}</span>\r\n            ),\r\n            row.mastery > 0 ? (\r\n              <img\r\n                src={`/assets/mastery_${row.mastery}.png`}\r\n                alt={`Mastery level: ${row.mastery}`}\r\n                title={`Mastery level: ${row.mastery}`}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            ),\r\n            row.chestAvail > 0 ? (\r\n              <img\r\n                src={`/assets/chest_available.png`}\r\n                alt=\"Chest available\"\r\n                title=\"Chest available\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            ),\r\n          ];\r\n        },\r\n      },\r\n      // {\r\n      //   Header: \"Owned\",\r\n      //   accessor: \"owned\",\r\n      //   Cell: (data: any) => {\r\n      //     return typeof data.value == \"boolean\"\r\n      //       ? data.value\r\n      //         ? \"YES\"\r\n      //         : \"NO\"\r\n      //       : data.value;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   Header: \"Mastery\",\r\n      //   accessor: \"mastery\",\r\n      // },\r\n      // {\r\n      //   Header: \"Chest Available\",\r\n      //   accessor: \"chestAvail\",\r\n      //   Cell: (data: any) =>\r\n      //     typeof data.value == \"boolean\"\r\n      //       ? data.value\r\n      //         ? \"YES\"\r\n      //         : \"NO\"\r\n      //       : data.value,\r\n      // },\r\n      {\r\n        Header: \"Shards\",\r\n        accessor: \"shards\",\r\n      },\r\n      {\r\n        Header: \"Permanents\",\r\n        accessor: \"perms\",\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Lvl 6\r\n            <br />\r\n            Tokens\r\n          </>\r\n        ),\r\n        accessor: \"token6\",\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Lvl 7\r\n            <br />\r\n            Tokens\r\n          </>\r\n        ),\r\n        accessor: \"token7\",\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Eternal\r\n            <br />\r\n            Shards\r\n          </>\r\n        ),\r\n        accessor: \"eternalShards\",\r\n      },\r\n      {\r\n        Header: \"Store Price\",\r\n        Cell: (data: any) => {\r\n          const row = data.row.original;\r\n          return [\r\n            row.storeBE,\r\n            <img\r\n              src={`/assets/be.png`}\r\n              alt=\"Blue Essence\"\r\n              title=\"Blue Essence\"\r\n              className=\"currency\"\r\n            />,\r\n            \"/\",\r\n            row.storeRP,\r\n            <img\r\n              src={`/assets/rp.png`}\r\n              alt=\"Riot Points\"\r\n              title=\"Riot Points\"\r\n              className=\"currency\"\r\n            />,\r\n          ];\r\n        },\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Upgrade\r\n            <br />\r\n            Price\r\n          </>\r\n        ),\r\n        accessor: \"ugradeBE\",\r\n        Cell: (data: any) => [\r\n          data.value,\r\n          <img\r\n            src={`/assets/be.png`}\r\n            alt=\"Blue Essence\"\r\n            title=\"Blue Essence\"\r\n            className=\"currency\"\r\n          />,\r\n        ],\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Disenchat\r\n            <br />\r\n            Shard\r\n          </>\r\n        ),\r\n        accessor: \"disenchantS\",\r\n        Cell: (data: any) => [\r\n          data.value,\r\n          <img\r\n            src={`/assets/be.png`}\r\n            alt=\"Blue Essence\"\r\n            title=\"Blue Essence\"\r\n            className=\"currency\"\r\n          />,\r\n        ],\r\n      },\r\n      {\r\n        Header: (\r\n          <>\r\n            Disenchat\r\n            <br />\r\n            Permanent\r\n          </>\r\n        ),\r\n        accessor: \"disenchantP\",\r\n        Cell: (data: any) => [\r\n          data.value,\r\n          <img\r\n            src={`/assets/be.png`}\r\n            alt=\"Blue Essence\"\r\n            title=\"Blue Essence\"\r\n            className=\"currency\"\r\n          />,\r\n        ],\r\n      },\r\n    ];\r\n\r\n    return { columns, data };\r\n  }\r\n\r\n  skinsTable() {}\r\n\r\n  wardsTable() {}\r\n\r\n  emotesTable() {}\r\n\r\n  iconsTable() {}\r\n\r\n  chromasTable() {}\r\n}\r\n","import React from \"react\";\r\nimport { interfaceManager } from \"./interfaceManager\";\r\nimport { mediaStreamManager } from \"./mediaStreamManager\";\r\n\r\nimport Skins from \"./views/skins\";\r\nimport Loot from \"./views/loot\";\r\nimport Champions from \"./views/champions\";\r\nimport Emotes from \"./views/emotes\";\r\nimport Icons from \"./views/icons\";\r\n\r\nimport Data from \"./Data\";\r\n\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\ninterface Scraper {\r\n  videoElement: React.RefObject<HTMLVideoElement>;\r\n  videoWidth: number;\r\n  videoHeight: number;\r\n  getCurrView: () => string | false;\r\n  startCapture: (onSuccess: () => void) => any;\r\n  startScraping: () => void;\r\n  recognize: (callback?: () => void) => void;\r\n  download: (callback?: () => void) => void;\r\n  data: () => {\r\n    champions?: any;\r\n    skins?: any;\r\n    wards?: any;\r\n    emotes?: any;\r\n    icons?: any;\r\n    chromas?: any;\r\n    blueEssenceSpent?: number;\r\n    [x: string]: any;\r\n  };\r\n  skins: any;\r\n  loot: any;\r\n  champions: any;\r\n  emotes: any;\r\n  icons: any;\r\n}\r\n\r\nconst scraper: Scraper = {\r\n  videoElement: React.createRef<HTMLVideoElement>(),\r\n  videoWidth: 0,\r\n  videoHeight: 0,\r\n  skins: null,\r\n  loot: null,\r\n  champions: null,\r\n  emotes: null,\r\n  icons: null,\r\n\r\n  data() {\r\n    let rects: any = [];\r\n\r\n    if (typeof scraper.loot.classifiedRects !== \"undefined\")\r\n      rects.push(scraper.loot.classifiedRects);\r\n    if (typeof scraper.champions.classifiedRects !== \"undefined\")\r\n      rects.push(scraper.champions.classifiedRects);\r\n    if (typeof scraper.skins.classifiedRects !== \"undefined\")\r\n      rects.push(scraper.skins.classifiedRects);\r\n\r\n    rects = rects\r\n      .flatMap((v: any) => v)\r\n      .filter((v: any) => typeof v.name !== \"undefined\");\r\n\r\n    const data = new Data(scraper.loot.lookupTable, rects);\r\n    return data;\r\n  },\r\n\r\n  recognize(callback?) {\r\n    const views = [\r\n      [\"skins\", scraper.skins],\r\n      [\"loot\", scraper.loot],\r\n      [\"champions\", scraper.champions],\r\n      [\"emotes\", scraper.emotes],\r\n      [\"icons\", scraper.icons],\r\n    ];\r\n\r\n    views.forEach(([viewName, view]) => {\r\n      view.recognize();\r\n    });\r\n\r\n    if (typeof callback === \"function\") {\r\n      callback();\r\n    }\r\n  },\r\n\r\n  download(callback?) {\r\n    const zip = new JSZip();\r\n    const views = [\r\n      [\"skins\", scraper.skins],\r\n      [\"loot\", scraper.loot],\r\n      [\"champions\", scraper.champions],\r\n      [\"emotes\", scraper.emotes],\r\n      [\"icons\", scraper.icons],\r\n    ];\r\n\r\n    views.forEach(([viewName, view]) => {\r\n      view.recognize();\r\n      view.annotateImages();\r\n\r\n      view.canvasList.forEach((canvas: HTMLCanvasElement, i: number) => {\r\n        if (canvas.height < 200) return;\r\n        const index = view.canvasList.length > 1 ? `_${i}` : \"\";\r\n        zip.file(\r\n          `${viewName}_annotated_${index}.png`,\r\n          canvas.toDataURL().split(\"base64,\")[1],\r\n          {\r\n            base64: true,\r\n          }\r\n        );\r\n      });\r\n\r\n      view.rawCanvasList.forEach((canvas: HTMLCanvasElement, i: number) => {\r\n        if (canvas.height < 200) return;\r\n        const index = view.canvasList.length > 1 ? `_${i}` : \"\";\r\n        zip.file(\r\n          `${viewName}_original_${index}.png`,\r\n          canvas.toDataURL().split(\"base64,\")[1],\r\n          {\r\n            base64: true,\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n    // let rects: any = [];\r\n\r\n    // if (typeof scraper.loot.classifiedRects !== \"undefined\")\r\n    //   rects.push(scraper.loot.classifiedRects);\r\n    // if (typeof scraper.champions.classifiedRects !== \"undefined\")\r\n    //   rects.push(scraper.champions.classifiedRects);\r\n    // if (typeof scraper.skins.classifiedRects !== \"undefined\")\r\n    //   rects.push(scraper.skins.classifiedRects);\r\n\r\n    // console.log(rects);\r\n    // rects = rects\r\n    //   .flatMap((v: any) => v)\r\n    //   .filter((v: any) => typeof v.name !== \"undefined\");\r\n\r\n    // console.log(rects);\r\n\r\n    // const data = new Data(scraper.loot.lookupTable, rects);\r\n\r\n    // // const data: any = {};\r\n\r\n    // // data[\"skins\"] = scraper.skins.classifiedRects;\r\n    // // data[\"champions\"] = scraper.champions.classifiedRects;\r\n    // // data[\"loot\"] = scraper.loot.classifiedRects;\r\n\r\n    // zip.file(`data.json`, JSON.stringify(data.champions));\r\n\r\n    zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n      saveAs(content, \"account_data.zip\");\r\n    });\r\n  },\r\n\r\n  getCurrView() {\r\n    return interfaceManager.currentInterface(scraper.videoElement);\r\n  },\r\n\r\n  startScraping() {\r\n    console.log(\"Started scraping\");\r\n    this.skins = new Skins(this.videoElement, scraper.getCurrView);\r\n    this.loot = new Loot(this.videoElement, scraper.getCurrView);\r\n    this.champions = new Champions(this.videoElement, scraper.getCurrView);\r\n    this.emotes = new Emotes(this.videoElement, scraper.getCurrView);\r\n    this.icons = new Icons(this.videoElement, scraper.getCurrView);\r\n  },\r\n\r\n  async startCapture(onSuccess) {\r\n    mediaStreamManager.startCapture(onSuccess);\r\n  },\r\n};\r\n\r\nexport default scraper;\r\n","import \"./Logo.css\";\r\n\r\nconst Logo: React.FC<{ justTitle?: boolean }> = ({ justTitle = false }) => {\r\n  const title = \"Lots of Loot\".replace(/ /g, \"\\u00a0\");\r\n  const subtitle1 = \"A smart inventory tracker\".replace(/ /g, \"\\u00a0\");\r\n  const subtitle2 = \"for League of Legends\".replace(/ /g, \"\\u00a0\");\r\n\r\n  return (\r\n    <div className=\"logo\">\r\n      <div className=\"title\">\r\n        {title.split(\"\").map((l, i) => (\r\n          <span key={i}>{l}</span>\r\n        ))}\r\n      </div>\r\n      {!justTitle && (\r\n        <>\r\n          <div className=\"subtitle\">\r\n            {subtitle1.split(\"\").map((l, i) => (\r\n              <span key={i}>{l}</span>\r\n            ))}\r\n          </div>\r\n          <div className=\"subtitle\">\r\n            {subtitle2.split(\"\").map((l, i) => (\r\n              <span key={i}>{l}</span>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import \"./WelcomeIcons.css\";\r\n\r\nconst WelcomeIcons = () => {\r\n  const icons = {\r\n    scroll: (\r\n      <svg\r\n        className=\"scroll\"\r\n        width=\"156\"\r\n        height=\"156\"\r\n        viewBox=\"0 0 156 156\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g className=\"arrow\">\r\n          <path\r\n            d=\"M78.239 56.9014L78.239 34.6315\"\r\n            stroke=\"#45B1FF\"\r\n            strokeWidth=\"8.20469\"\r\n            strokeLinecap=\"round\"\r\n          />\r\n        </g>\r\n        <rect\r\n          x=\"46.0062\"\r\n          y=\"136.018\"\r\n          width=\"117.21\"\r\n          height=\"64.4654\"\r\n          rx=\"32.2327\"\r\n          transform=\"rotate(-90 46.0062 136.018)\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n        />\r\n      </svg>\r\n    ),\r\n    share: (\r\n      <svg\r\n        className=\"share\"\r\n        width=\"156\"\r\n        height=\"156\"\r\n        viewBox=\"0 0 156 156\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g className=\"arrow\">\r\n          <path\r\n            d=\"M120.378 24.0643H149.68V52.1947\"\r\n            stroke=\"#45B1FF\"\r\n            strokeWidth=\"8.20469\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M109.829 63.3296L147.923 25.2365\"\r\n            stroke=\"#45B1FF\"\r\n            strokeWidth=\"8.20469\"\r\n            strokeLinecap=\"round\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M149.681 69.8193V104.939H6.68457V24.0643H102.797\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M40.0894 130.725H116.276\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <rect\r\n          x=\"67.6338\"\r\n          y=\"104.939\"\r\n          width=\"21.0978\"\r\n          height=\"25.7862\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n        />\r\n      </svg>\r\n    ),\r\n    download: (\r\n      <svg\r\n        className=\"download\"\r\n        width=\"156\"\r\n        height=\"156\"\r\n        viewBox=\"0 0 156 156\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g className=\"arrow\">\r\n          <path\r\n            d=\"M98.708 49.9298L77.988 70.6498L58.0969 50.7586\"\r\n            stroke=\"#45B1FF\"\r\n            strokeWidth=\"8.20469\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M78.4024 14.7059V68.5778\"\r\n            stroke=\"#45B1FF\"\r\n            strokeWidth=\"8.20469\"\r\n            strokeLinecap=\"round\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M11.615 99.0969V127.227H145.234V99.0969\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M59.671 70.9666H35.057L11.615 99.0969H145.234L121.792 70.9666H97.1782\"\r\n          stroke=\"#333333\"\r\n          strokeWidth=\"8.20469\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    ),\r\n  };\r\n  return (\r\n    <div className=\"welcome-icons\">\r\n      <div className=\"block\">\r\n        <div className=\"icon\">{icons.share}</div>\r\n        <div className=\"text\">\r\n          Screen share\r\n          <br />\r\n          game client\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"icon\">{icons.scroll}</div>\r\n        <div className=\"text\">\r\n          Scroll through\r\n          <br />\r\n          invetory screens\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"icon\">{icons.download}</div>\r\n        <div className=\"text\">\r\n          Analyze and\r\n          <br />\r\n          download results\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeIcons;\r\n","import Logo from \"./assets/Logo\";\r\nimport WelcomeIcons from \"./assets/WelcomeIcons\";\r\nimport scraper from \"../../tools/scraper\";\r\nimport \"./WelcomeView.css\";\r\n\r\ntype Props = {\r\n  setView: (viewName: string) => void;\r\n  hide: boolean;\r\n};\r\n\r\nconst WelcomeView = (props: Props) => {\r\n  const shareWindow = () => {\r\n    scraper.startCapture(() => {\r\n      props.setView(\"prepare\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={\"welcome-view\" + (props.hide ? \" hide\" : \"\")}>\r\n      <Logo />\r\n      <WelcomeIcons />\r\n      <div className=\"share-screen\" onClick={shareWindow}>\r\n        Share game client window\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeView;\r\n","import \"./PrepareIcons.css\";\r\n\r\nconst PrepareIcons = () => {\r\n  const icons = {\r\n    clearPopups: (\r\n      <svg\r\n        width=\"496\"\r\n        height=\"279\"\r\n        viewBox=\"0 0 496 279\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect\r\n          x=\"3.5\"\r\n          y=\"3.5\"\r\n          width=\"489\"\r\n          height=\"272\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"7\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M19.5 249H144.5\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"26.5\"\r\n          y=\"63.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"26.5\"\r\n          y=\"96.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"26.5\"\r\n          y=\"129.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"26.5\"\r\n          y=\"162.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"26.5\"\r\n          y=\"195.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M50 241V227H25V241\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"90.5\"\r\n          y=\"63.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"90.5\"\r\n          y=\"96.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"90.5\"\r\n          y=\"129.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"90.5\"\r\n          y=\"162.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"90.5\"\r\n          y=\"195.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M114 241V227H89V241\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"58.5\"\r\n          y=\"63.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"58.5\"\r\n          y=\"96.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"58.5\"\r\n          y=\"129.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"58.5\"\r\n          y=\"162.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"58.5\"\r\n          y=\"195.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M82 241V227H57V241\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"122.5\"\r\n          y=\"63.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"122.5\"\r\n          y=\"96.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"122.5\"\r\n          y=\"129.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"122.5\"\r\n          y=\"162.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"122.5\"\r\n          y=\"195.5\"\r\n          width=\"22\"\r\n          height=\"23\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M146 241V227H121V241\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M8.5 41H486.5M408.5 51.5V266\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <circle\r\n          cx=\"421\"\r\n          cy=\"23\"\r\n          r=\"10.5\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"304\"\r\n          y=\"189\"\r\n          width=\"94\"\r\n          height=\"76\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n        />\r\n        <rect\r\n          x=\"286\"\r\n          y=\"54\"\r\n          width=\"112\"\r\n          height=\"49\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n        />\r\n        <path\r\n          d=\"M60 65.5L77.5 83.5\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M124 131.5L141.5 149.5\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M92 164.5L109.5 182.5\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M304 190L397 262\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M286 54L397 102\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n    ),\r\n    resizeClient: (\r\n      <svg\r\n        width=\"496\"\r\n        height=\"279\"\r\n        viewBox=\"0 0 496 279\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect\r\n          x=\"112.933\"\r\n          y=\"64.371\"\r\n          width=\"270.133\"\r\n          height=\"150.258\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"3.86694\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M115.696 85.0867H379.752M336.664 90.8871V209.381\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"1.65726\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <circle\r\n          cx=\"343.568\"\r\n          cy=\"75.1432\"\r\n          r=\"5.8004\"\r\n          stroke=\"#0A98FF\"\r\n          strokeWidth=\"1.65726\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <rect\r\n          x=\"3.5\"\r\n          y=\"3.5\"\r\n          width=\"489\"\r\n          height=\"272\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"7\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M482 13L392 57\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M14 266L104 222\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M14 13L104 57\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M482 266L392 222\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n    ),\r\n  };\r\n  return (\r\n    <div className=\"prepare-icons\">\r\n      <div className=\"block\">\r\n        <div className=\"icon\">{icons.clearPopups}</div>\r\n        <div className=\"text\">\r\n          Hide chats, notifications and\r\n          <br />\r\n          remove new items highlights\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"icon\">{icons.resizeClient}</div>\r\n        <div className=\"text\">\r\n          Downscale your client for best\r\n          <br />\r\n          performance using Ctrl[-]\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrepareIcons;\r\n","import React from \"react\";\r\nimport \"./SmallLogo.css\";\r\n\r\nconst SmallLogo = (props: { animateIn?: boolean } = { animateIn: true }) => {\r\n  return (\r\n    <div>\r\n      <h1 className={\"small-logo \" + (props.animateIn ? \"animate-in\" : \"\")}>\r\n        Lots of Loot\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallLogo;\r\n","import React from \"react\";\r\nimport scraper from \"../../tools/scraper\";\r\nimport \"./PrepareView.css\";\r\nimport PrepareIcons from \"./assets/PrepareIcons\";\r\nimport SmallLogo from \"../../components/SmallLogo\";\r\n\r\ntype Props = {\r\n  setView: (viewName: string) => void;\r\n  hide: boolean;\r\n};\r\n\r\nconst PrepareView = (props: Props) => {\r\n  return (\r\n    <div className={\"prepare-view\" + (props.hide ? \" hide\" : \"\")}>\r\n      <SmallLogo animateIn={true} />\r\n      <PrepareIcons />\r\n      <div\r\n        className=\"prepare-ready\"\r\n        onClick={() => {\r\n          props.setView(\"scrape\");\r\n          scraper.startScraping();\r\n        }}\r\n      >\r\n        Start scanning\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrepareView;\r\n","import \"./Loader.css\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  active?: boolean;\r\n  loaded?: string;\r\n  warning?: string | null;\r\n};\r\n\r\nconst Loader = (props: Props) => {\r\n  return (\r\n    <div className=\"loader\">\r\n      {props.active && <div className=\"active\"></div>}\r\n      <div className=\"text\">\r\n        <div className=\"name\">{props.name}</div>\r\n        <div className=\"loaded\">{props.loaded || \"0%\"}</div>\r\n      </div>\r\n      <div className=\"bar\">\r\n        <div\r\n          className=\"loaded\"\r\n          style={{\r\n            transform:\r\n              `scaleX(${parseInt(props.loaded.replace(\"%\", \"\")) / 100})` ||\r\n              `scaleX(0)`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      {props.warning && (\r\n        <>\r\n          <div className=\"warning\">{props.warning}</div>\r\n          <div className=\"warning-point\">!</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport scraper from \"../../tools/scraper\";\r\nimport Loader from \"./assets/Loader\";\r\nimport SmallLogo from \"../../components/SmallLogo\";\r\nimport \"./ScrapeView.css\";\r\nimport { finished } from \"node:stream\";\r\n\r\ntype Props = {\r\n  setView: (viewName: string, callback?: () => void) => void;\r\n  hide: boolean;\r\n};\r\n\r\nconst ScrapeView = (props: Props) => {\r\n  const getLoadedStates = () => {\r\n    const output: { [x: string]: any } = {};\r\n    [\r\n      \"loot\",\r\n      \"champions\",\r\n      \"skins\",\r\n      \"emotes\",\r\n      \"icons\",\r\n      \"wards\",\r\n      \"chromas\",\r\n    ].forEach((type) => {\r\n      if (typeof (scraper as any)[type] !== \"undefined\") {\r\n        output[type] = {\r\n          loaded: (scraper as any)[type].progress(),\r\n          isActive: scraper.getCurrView() === type,\r\n          warnMessage:\r\n            typeof (scraper as any)[type].warnMessage !== \"undefined\"\r\n              ? (scraper as any)[type].warnMessage\r\n              : null,\r\n        };\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  const [loadStates, setLoadStates] = useState(getLoadedStates());\r\n  const requestRef = React.useRef<number | null>();\r\n\r\n  const updateLoadedStateLoop = () => {\r\n    setLoadStates(getLoadedStates());\r\n    requestRef.current = requestAnimationFrame(updateLoadedStateLoop);\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestRef.current = requestAnimationFrame(updateLoadedStateLoop);\r\n    return () => cancelAnimationFrame(requestRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"scrape-view\" + (props.hide ? \" hide\" : \"\")}>\r\n      <SmallLogo animateIn={false} />\r\n      <div className=\"row\">\r\n        <div className=\"loaders\">\r\n          {[\r\n            \"loot\",\r\n            \"collection\",\r\n            \"champions\",\r\n            \"skins\",\r\n            \"emotes\",\r\n            \"wards\",\r\n            \"icons\",\r\n            \"chromas\",\r\n          ].map((type) => {\r\n            if (type === \"collection\")\r\n              return (\r\n                <div key=\"subtitle\" className=\"subtitle\">\r\n                  Collection:\r\n                </div>\r\n              );\r\n            if (typeof (loadStates as any)[type] !== \"undefined\")\r\n              return (\r\n                <Loader\r\n                  key={type}\r\n                  name={type}\r\n                  loaded={loadStates[type].loaded}\r\n                  active={loadStates[type].isActive}\r\n                  warning={loadStates[type].warnMessage}\r\n                />\r\n              );\r\n            return \"\";\r\n          })}\r\n          <div\r\n            className={\r\n              \"finish-scanning\" +\r\n              (Object.values(loadStates)\r\n                .map((v: any) => v.loaded)\r\n                .reduce((p: any, c: any) => p + (c !== \"100.0%\"), 0) === 0\r\n                ? \" done\"\r\n                : \"\")\r\n            }\r\n            onClick={() => props.setView(\"work\")}\r\n          >\r\n            Finish scanning\r\n          </div>\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h2 style={{ marginTop: 0 }}>Instructions:</h2>\r\n          <p>\r\n            Open up each of the views seen on the left in game client.\r\n            <br />\r\n            In each view do the following:\r\n          </p>\r\n          <ol>\r\n            <li>Scroll to the top</li>\r\n            <li>Slowly scroll down paying attention to the percentages</li>\r\n            <li>If percentage doesn't change as you scroll, back up a bit</li>\r\n          </ol>\r\n          <p>Notes:</p>\r\n          <ul>\r\n            <li>\r\n              Chat hovers & popups can obstruct the view, try to avoid them.\r\n            </li>\r\n            <li>\r\n              While scrolling keep mouse on the scrollbar, or right of it after\r\n              you grab it\r\n            </li>\r\n            <li>\r\n              Please be patient while recognizing the data once scanned. This\r\n              can take anywhere from a couple seconds to a couple minutes\r\n              depending on the speed of your machine and the size of your League\r\n              inventory\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapeView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport scraper from \"../../tools/scraper\";\r\nimport SmallLogo from \"../../components/SmallLogo\";\r\nimport \"./WorkView.css\";\r\n\r\ntype Props = {\r\n  setView: (viewName: string) => void;\r\n  hide: boolean;\r\n};\r\n\r\nconst WorkView = (props: Props) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scraper.recognize(() => {\r\n        props.setView(\"data\");\r\n      });\r\n    }, 600);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"work-view\" + (props.hide ? \" hide\" : \"\")}>\r\n      <SmallLogo animateIn={false} />\r\n      <div className=\"work-center\">\r\n        <h1>Working...</h1>\r\n        <p>\r\n          This may take up to a couple minutes for large libraries on slow\r\n          machines.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkView;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport scraper from \"../../tools/scraper\";\r\nimport Logo from \"../WelcomeView/assets/Logo\";\r\nimport \"./DataView.css\";\r\nimport { useTable } from \"react-table\";\r\n\r\ntype Props = {\r\n  setView: (viewName: string) => void;\r\n  hide: boolean;\r\n};\r\n\r\nconst DataView = (props: Props) => {\r\n  const tableData = useMemo(() => scraper.data(), []);\r\n\r\n  const Table = ({ columns, data }: { columns: any; data: any }) => {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({\r\n        columns,\r\n        data,\r\n      });\r\n\r\n    // Render the UI for your table\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr key={`row_${i}`} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\", width: 1080, textAlign: \"center\" }}>\r\n      <div className={\"work-view\" + (props.hide ? \" hide\" : \"\")}>\r\n        <Logo justTitle={true} />\r\n        {/* <h2>\r\n          Total blue essense spent for champions assuming all were bought with\r\n          blue essence: {tableData.blueEssenceSpent}\r\n        </h2> */}\r\n        <button\r\n          style={{\r\n            margin: \"10px 0 30px\",\r\n            background: \"#0a98ff\",\r\n            border: \"none\",\r\n            color: \"#fff\",\r\n            padding: \"1rem 2rem\",\r\n            fontSize: \"20px\",\r\n            borderRadius: \"2rem\",\r\n          }}\r\n          onClick={() => {\r\n            scraper.download();\r\n          }}\r\n        >\r\n          DOWNLOAD GENERATED SCERENSHOTS\r\n        </button>\r\n        <Table\r\n          columns={tableData.champions.columns}\r\n          data={tableData.champions.data}\r\n        />\r\n        <a href=\"#\" onClick={() => scraper.download()}>\r\n          Download\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataView;\r\n","import { useState, useRef } from \"react\";\r\nimport scraper from \"./tools/scraper\";\r\nimport WelcomeView from \"./views/WelcomeView/WelcomeView\";\r\nimport PrepareView from \"./views/PrepareView/PrepareView\";\r\nimport ScrapeView from \"./views/ScrapeView/ScrapeView\";\r\nimport WorkView from \"./views/WorkView/WorkView\";\r\nimport DataView from \"./views/DataView/DataView\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [isHiding, setIsHiding] = useState(false);\r\n  const [currView, setCurrView] = useState(\"welcome\");\r\n\r\n  scraper.videoElement = useRef<HTMLVideoElement>(null);\r\n\r\n  const setView = (view: string, callback?: () => void) => {\r\n    if (isHiding === false) {\r\n      setIsHiding(true);\r\n      setTimeout(() => {\r\n        if (typeof callback == \"function\") callback();\r\n        setIsHiding(false);\r\n        setCurrView(view);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currView === \"welcome\" && (\r\n        <WelcomeView hide={isHiding} setView={setView} />\r\n      )}\r\n\r\n      {currView === \"prepare\" && (\r\n        <PrepareView hide={isHiding} setView={setView} />\r\n      )}\r\n\r\n      {currView === \"scrape\" && (\r\n        <ScrapeView hide={isHiding} setView={setView} />\r\n      )}\r\n\r\n      {currView === \"work\" && <WorkView hide={isHiding} setView={setView} />}\r\n\r\n      {currView === \"data\" && <DataView hide={isHiding} setView={setView} />}\r\n\r\n      <div className=\"debug\" style={{ display: \"none\" }}>\r\n        <video ref={scraper.videoElement}></video>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}